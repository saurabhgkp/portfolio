{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RecognizerEngine = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar keys_1 = require(\"../../grammar/keys\");\n\nvar exceptions_public_1 = require(\"../../exceptions_public\");\n\nvar lookahead_1 = require(\"../../grammar/lookahead\");\n\nvar interpreter_1 = require(\"../../grammar/interpreter\");\n\nvar parser_1 = require(\"../parser\");\n\nvar recoverable_1 = require(\"./recoverable\");\n\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\n\nvar tokens_1 = require(\"../../../scan/tokens\");\n\nvar lang_extensions_1 = require(\"../../../lang/lang_extensions\");\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\n\n\nvar RecognizerEngine =\n/** @class */\nfunction () {\n  function RecognizerEngine() {}\n\n  RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n    this.className = lang_extensions_1.classNameFromInstance(this); // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokens_1.tokenStructuredMatcherNoCategories;\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n\n    if (utils_1.has(config, \"serializedGrammar\")) {\n      throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" + \"\\tFor Further details.\");\n    }\n\n    if (utils_1.isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (utils_1.isEmpty(tokenVocabulary)) {\n        throw Error(\"A Token Vocabulary cannot be empty.\\n\" + \"\\tNote that the first argument for the parser constructor\\n\" + \"\\tis no longer a Token vector (since v4.0).\");\n      }\n\n      if (typeof tokenVocabulary[0].startOffset === \"number\") {\n        throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" + \"\\tFor Further details.\");\n      }\n    }\n\n    if (utils_1.isArray(tokenVocabulary)) {\n      this.tokensMap = utils_1.reduce(tokenVocabulary, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (utils_1.has(tokenVocabulary, \"modes\") && utils_1.every(utils_1.flatten(utils_1.values(tokenVocabulary.modes)), tokens_1.isTokenType)) {\n      var allTokenTypes = utils_1.flatten(utils_1.values(tokenVocabulary.modes));\n      var uniqueTokens = utils_1.uniq(allTokenTypes);\n      this.tokensMap = utils_1.reduce(uniqueTokens, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (utils_1.isObject(tokenVocabulary)) {\n      this.tokensMap = utils_1.cloneObj(tokenVocabulary);\n    } else {\n      throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" + \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n    } // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n\n    /* tslint:disable */\n\n\n    this.tokensMap[\"EOF\"] = tokens_public_1.EOF; // TODO: This check may not be accurate for multi mode lexers\n\n    var noTokenCategoriesUsed = utils_1.every(utils_1.values(tokenVocabulary), function (tokenConstructor) {\n      return utils_1.isEmpty(tokenConstructor.categoryMatches);\n    });\n    this.tokenMatcher = noTokenCategoriesUsed ? tokens_1.tokenStructuredMatcherNoCategories : tokens_1.tokenStructuredMatcher; // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n\n    tokens_1.augmentTokenTypes(utils_1.values(this.tokensMap));\n  };\n\n  RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n    if (this.selfAnalysisDone) {\n      throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" + \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n    }\n\n    var resyncEnabled = utils_1.has(config, \"resyncEnabled\") ? config.resyncEnabled : parser_1.DEFAULT_RULE_CONFIG.resyncEnabled;\n    var recoveryValueFunc = utils_1.has(config, \"recoveryValueFunc\") ? config.recoveryValueFunc : parser_1.DEFAULT_RULE_CONFIG.recoveryValueFunc; // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n\n    /* tslint:disable */\n\n    var shortName = this.ruleShortNameIdx << keys_1.BITS_FOR_METHOD_TYPE + keys_1.BITS_FOR_OCCURRENCE_IDX;\n    /* tslint:enable */\n\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n\n    function invokeRuleWithTry(args) {\n      try {\n        if (this.outputCst === true) {\n          impl.apply(this, args);\n          var cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst;\n        } else {\n          return impl.apply(this, args);\n        }\n      } catch (e) {\n        return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n      } finally {\n        this.ruleFinallyStateUpdate();\n      }\n    }\n\n    var wrappedGrammarRule = function (idxInCallingRule, args) {\n      if (idxInCallingRule === void 0) {\n        idxInCallingRule = 0;\n      }\n\n      this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n      return invokeRuleWithTry.call(this, args);\n    };\n\n    var ruleNamePropName = \"ruleName\";\n    wrappedGrammarRule[ruleNamePropName] = ruleName;\n    wrappedGrammarRule[\"originalGrammarAction\"] = impl;\n    return wrappedGrammarRule;\n  };\n\n  RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n    var isFirstInvokedRule = this.RULE_STACK.length === 1; // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n\n    var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n\n    if (exceptions_public_1.isRecognitionException(e)) {\n      var recogError = e;\n\n      if (reSyncEnabled) {\n        var reSyncTokType = this.findReSyncTokenType();\n\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc();\n          }\n        } else {\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          } // to be handled Further up the call stack\n\n\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState(); // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n\n        return recoveryValueFunc();\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  }; // Implementation of parsing DSL\n\n\n  RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n    var key = this.getKeyForAutomaticLookahead(keys_1.OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  };\n\n  RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_1 = lookAheadFunc;\n\n        lookAheadFunc = function () {\n          return predicate.call(_this) && orgLookaheadFunction_1.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n\n    return undefined;\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_IDX, prodOccurrence);\n    return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_2 = lookAheadFunc;\n\n        lookAheadFunc = function () {\n          return predicate.call(_this) && orgLookaheadFunction_2.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    if (lookAheadFunc.call(this) === true) {\n      var notStuck = this.doSingleRepetition(action);\n\n      while (lookAheadFunc.call(this) === true && notStuck === true) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n    } // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, keys_1.AT_LEAST_ONE_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneWalker);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLookaheadFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;\n      action.call(this); //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, interpreter_1.NextTerminalAfterAtLeastOneSepWalker], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterAtLeastOneSepWalker);\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, lookahead_1.PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n    }\n  };\n\n  RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n\n  RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n\n    var lookaheadFunction = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE; // predicate present\n\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_3 = lookaheadFunction;\n\n        lookaheadFunction = function () {\n          return predicate.call(_this) && orgLookaheadFunction_3.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n\n    var notStuck = true;\n\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n    this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, keys_1.MANY_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManyWalker, // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n    // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n    // An infinite loop cannot occur as:\n    // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n    // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n    notStuck);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.MANY_SEP_IDX, prodOccurrence);\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n\n  RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLaFunc = this.getLaFuncFromCache(key); // 1st iteration\n\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      }; // 2nd..nth iterations\n\n\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator); // No need for checking infinite loop here due to consuming the separator.\n\n        action.call(this);\n      } // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, interpreter_1.NextTerminalAfterManySepWalker], separatorLookAheadFunc, keys_1.MANY_SEP_IDX, prodOccurrence, interpreter_1.NextTerminalAfterManySepWalker);\n    }\n  };\n\n  RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    } // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n\n    /* istanbul ignore else */\n\n\n    this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker], separatorLookAheadFunc, keys_1.AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n  };\n\n  RecognizerEngine.prototype.doSingleRepetition = function (action) {\n    var beforeIteration = this.getLexerPosition();\n    action.call(this);\n    var afterIteration = this.getLexerPosition(); // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n\n    return afterIteration > beforeIteration;\n  };\n\n  RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n    var laKey = this.getKeyForAutomaticLookahead(keys_1.OR_IDX, occurrence);\n    var alts = utils_1.isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n    var laFunc = this.getLaFuncFromCache(laKey);\n    var altIdxToTake = laFunc.call(this, alts);\n\n    if (altIdxToTake !== undefined) {\n      var chosenAlternative = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n\n    this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n  };\n\n  RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop(); // NOOP when cst is disabled\n\n    this.cstFinallyStateUpdate();\n\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      var firstRedundantTok = this.LA(1);\n      var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      });\n      this.SAVE_ERROR(new exceptions_public_1.NotAllInputParsedException(errMsg, firstRedundantTok));\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n    var ruleResult;\n\n    try {\n      var args = options !== undefined ? options.ARGS : undefined;\n      ruleResult = ruleToCall.call(this, idx, args);\n      this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleToCall.ruleName);\n      return ruleResult;\n    } catch (e) {\n      this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  };\n\n  RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n    if (exceptions_public_1.isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleName);\n      delete e.partialCstResult;\n    }\n\n    throw e;\n  };\n\n  RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n    var consumedToken;\n\n    try {\n      var nextToken = this.LA(1);\n\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n    }\n\n    this.cstPostTerminal(options !== undefined && options.LABEL !== undefined ? options.LABEL : tokType.name, consumedToken);\n    return consumedToken;\n  };\n\n  RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n    var msg;\n    var previousToken = this.LA(0);\n\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      });\n    }\n\n    throw this.SAVE_ERROR(new exceptions_public_1.MismatchedTokenException(msg, nextToken, previousToken));\n  };\n\n  RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (this.recoveryEnabled && // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n    eFromConsumption.name === \"MismatchedTokenException\" && !this.isBackTracking()) {\n      var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n\n      try {\n        return this.tryInRuleRecovery(tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === recoverable_1.IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  };\n\n  RecognizerEngine.prototype.saveRecogState = function () {\n    // errors is a getter which will clone the errors array\n    var savedErrors = this.errors;\n    var savedRuleStack = utils_1.cloneArr(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    };\n  };\n\n  RecognizerEngine.prototype.reloadRecogState = function (newState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  };\n\n  RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName); // NOOP when cst is disabled\n\n    this.cstInvocationStateUpdate(fullName, shortName);\n  };\n\n  RecognizerEngine.prototype.isBackTracking = function () {\n    return this.isBackTrackingStack.length !== 0;\n  };\n\n  RecognizerEngine.prototype.getCurrRuleFullName = function () {\n    var shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n    return this.shortRuleNameToFull[shortName];\n  };\n\n  RecognizerEngine.prototype.isAtEndOfInput = function () {\n    return this.tokenMatcher(this.LA(1), tokens_public_1.EOF);\n  };\n\n  RecognizerEngine.prototype.reset = function () {\n    this.resetLexerState();\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = []; // TODO: extract a specific reset for TreeBuilder trait\n\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  };\n\n  return RecognizerEngine;\n}();\n\nexports.RecognizerEngine = RecognizerEngine;","map":{"version":3,"mappings":";;;;;;;AAgBA;;AAaA;;AAUA;;AAKA;;AACA;;AAOA;;AACA;;AACA;;AAEA;;AAMA;AAGA;;;;;;AAIA;AAAA;AAAA;EAAA,6BAixBC;;EAnwBCA,4DACEC,eADF,EAEEC,MAFF,EAEuB;IAErB,KAAKC,SAAL,GAAiBC,wCAAsB,IAAtB,CAAjB,CAFqB,CAGrB;;IACA,KAAKC,mBAAL,GAA2B,EAA3B;IACA,KAAKC,mBAAL,GAA2B,EAA3B;IACA,KAAKC,gBAAL,GAAwB,GAAxB;IACA,KAAKC,YAAL,GAAoBC,2CAApB;IAEA,KAAKC,iBAAL,GAAyB,EAAzB;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,mBAAL,GAA2B,EAA3B;IACA,KAAKC,UAAL,GAAkB,EAAlB;IACA,KAAKC,qBAAL,GAA6B,EAA7B;IACA,KAAKC,oBAAL,GAA4B,EAA5B;;IAEA,IAAIC,YAAId,MAAJ,EAAY,mBAAZ,CAAJ,EAAsC;MACpC,MAAMe,KAAK,CACT,uFACE,0EADF,GAEE,wBAHO,CAAX;IAKD;;IAED,IAAID,gBAAQf,eAAR,CAAJ,EAA8B;MAC5B;MACA;MACA;MACA,IAAIe,gBAAQf,eAAR,CAAJ,EAAuC;QACrC,MAAMgB,KAAK,CACT,0CACE,6DADF,GAEE,6CAHO,CAAX;MAKD;;MAED,IAAI,OAAQhB,eAAyB,CAAC,CAAD,CAAzB,CAA6BiB,WAArC,KAAqD,QAAzD,EAAmE;QACjE,MAAMD,KAAK,CACT,qFACE,0EADF,GAEE,wBAHO,CAAX;MAKD;IACF;;IAED,IAAID,gBAAQf,eAAR,CAAJ,EAA8B;MAC5B,KAAKU,SAAL,GAAsBK,eACff,eADe,EAEpB,UAACkB,GAAD,EAAMC,OAAN,EAAwB;QACtBD,GAAG,CAACC,OAAO,CAACC,IAAT,CAAH,GAAoBD,OAApB;QACA,OAAOD,GAAP;MACD,CALmB,EAMpB,EANoB,CAAtB;IAQD,CATD,MASO,IACLH,YAAIf,eAAJ,EAAqB,OAArB,KACAe,cAAMA,gBAAQA,eAAaf,eAAgB,CAACqB,KAA9B,CAAR,CAAN,EAAqDb,oBAArD,CAFK,EAGL;MACA,IAAMc,aAAa,GAAGP,gBAAQA,eAAaf,eAAgB,CAACqB,KAA9B,CAAR,CAAtB;MACA,IAAME,YAAY,GAAGR,aAAKO,aAAL,CAArB;MACA,KAAKZ,SAAL,GAAsBK,eACpBQ,YADoB,EAEpB,UAACL,GAAD,EAAMC,OAAN,EAAwB;QACtBD,GAAG,CAACC,OAAO,CAACC,IAAT,CAAH,GAAoBD,OAApB;QACA,OAAOD,GAAP;MACD,CALmB,EAMpB,EANoB,CAAtB;IAQD,CAdM,MAcA,IAAIH,iBAASf,eAAT,CAAJ,EAA+B;MACpC,KAAKU,SAAL,GAAiBK,iBAASf,eAAT,CAAjB;IACD,CAFM,MAEA;MACL,MAAM,IAAIgB,KAAJ,CACJ,wEACE,qEAFE,CAAN;IAID,CA3EoB,CA6ErB;IACA;;IACA;;;IACA,KAAKN,SAAL,CAAe,KAAf,IAAwBc,mBAAxB,CAhFqB,CAkFrB;;IACA,IAAMC,qBAAqB,GAAGV,cAC5BA,eAAOf,eAAP,CAD4B,EAE5B,UAAC0B,gBAAD,EAAiB;MAAK,uBAAQA,gBAAgB,CAACC,eAAzB;IAAyC,CAFnC,CAA9B;IAKA,KAAKpB,YAAL,GAAoBkB,qBAAqB,GACrCjB,2CADqC,GAErCA,+BAFJ,CAxFqB,CA4FrB;IACA;IACA;;IACAA,2BAAkBO,eAAO,KAAKL,SAAZ,CAAlB;EACD,CAlGD;;EAoGAX,kDAEE6B,QAFF,EAGEC,IAHF,EAIE5B,MAJF,EAIwB;IAEtB,IAAI,KAAK6B,gBAAT,EAA2B;MACzB,MAAMd,KAAK,CACT,mBAAiBY,QAAjB,GAAyB,gFAAzB,GACE,8FAFO,CAAX;IAID;;IACD,IAAMG,aAAa,GAAGhB,YAAId,MAAJ,EAAY,eAAZ,IAClBA,MAAM,CAAC8B,aADW,GAElBC,6BAAoBD,aAFxB;IAGA,IAAME,iBAAiB,GAAGlB,YAAId,MAAJ,EAAY,mBAAZ,IACtBA,MAAM,CAACgC,iBADe,GAEtBD,6BAAoBC,iBAFxB,CAXsB,CAetB;IACA;;IACA;;IACA,IAAMC,SAAS,GACb,KAAK5B,gBAAL,IAA0B6B,8BAAuBA,8BADnD;IAEA;;IAEA,KAAK7B,gBAAL;IACA,KAAKF,mBAAL,CAAyB8B,SAAzB,IAAsCN,QAAtC;IACA,KAAKvB,mBAAL,CAAyBuB,QAAzB,IAAqCM,SAArC;;IAEA,SAASE,iBAAT,CAA2BC,IAA3B,EAAsC;MACpC,IAAI;QACF,IAAI,KAAKC,SAAL,KAAmB,IAAvB,EAA6B;UAC3BT,IAAI,CAACU,KAAL,CAAW,IAAX,EAAiBF,IAAjB;UACA,IAAMG,GAAG,GAAG,KAAKC,SAAL,CAAe,KAAKA,SAAL,CAAeC,MAAf,GAAwB,CAAvC,CAAZ;UACA,KAAKC,WAAL,CAAiBH,GAAjB;UACA,OAAOA,GAAP;QACD,CALD,MAKO;UACL,OAAOX,IAAI,CAACU,KAAL,CAAW,IAAX,EAAiBF,IAAjB,CAAP;QACD;MACF,CATD,CASE,OAAOO,CAAP,EAAU;QACV,OAAO,KAAKC,eAAL,CAAqBD,CAArB,EAAwBb,aAAxB,EAAuCE,iBAAvC,CAAP;MACD,CAXD,SAWU;QACR,KAAKa,sBAAL;MACD;IACF;;IAED,IAAMC,kBAAkB,GAAG,UACzBC,gBADyB,EAEzBX,IAFyB,EAEd;MADX;QAAAW;MAA4B;;MAG5B,KAAKC,yBAAL,CAA+Bf,SAA/B,EAA0CN,QAA1C,EAAoDoB,gBAApD;MACA,OAAOZ,iBAAiB,CAACc,IAAlB,CAAuB,IAAvB,EAA6Bb,IAA7B,CAAP;IACD,CAND;;IAQA,IAAMc,gBAAgB,GAAG,UAAzB;IACAJ,kBAAkB,CAACI,gBAAD,CAAlB,GAAuCvB,QAAvC;IACAmB,kBAAkB,CAAC,uBAAD,CAAlB,GAA8ClB,IAA9C;IACA,OAAOkB,kBAAP;EACD,CA3DD;;EA6DAhD,uDAEE6C,CAFF,EAGEQ,mBAHF,EAIEnB,iBAJF,EAI6B;IAE3B,IAAMoB,kBAAkB,GAAG,KAAKzC,UAAL,CAAgB8B,MAAhB,KAA2B,CAAtD,CAF2B,CAG3B;IACA;IACA;IACA;;IACA,IAAMY,aAAa,GACjBF,mBAAmB,IAAI,CAAC,KAAKG,cAAL,EAAxB,IAAiD,KAAKC,eADxD;;IAGA,IAAIC,2CAAuBb,CAAvB,CAAJ,EAA+B;MAC7B,IAAMc,UAAU,GAAQd,CAAxB;;MACA,IAAIU,aAAJ,EAAmB;QACjB,IAAMK,aAAa,GAAG,KAAKC,mBAAL,EAAtB;;QACA,IAAI,KAAKC,wBAAL,CAA8BF,aAA9B,CAAJ,EAAkD;UAChDD,UAAU,CAACI,cAAX,GAA4B,KAAKC,QAAL,CAAcJ,aAAd,CAA5B;;UACA,IAAI,KAAKrB,SAAT,EAAoB;YAClB,IAAM0B,gBAAgB,GAAQ,KAAKvB,SAAL,CAC5B,KAAKA,SAAL,CAAeC,MAAf,GAAwB,CADI,CAA9B;YAGAsB,gBAAgB,CAACC,aAAjB,GAAiC,IAAjC;YACA,OAAOD,gBAAP;UACD,CAND,MAMO;YACL,OAAO/B,iBAAiB,EAAxB;UACD;QACF,CAXD,MAWO;UACL,IAAI,KAAKK,SAAT,EAAoB;YAClB,IAAM0B,gBAAgB,GAAQ,KAAKvB,SAAL,CAC5B,KAAKA,SAAL,CAAeC,MAAf,GAAwB,CADI,CAA9B;YAGAsB,gBAAgB,CAACC,aAAjB,GAAiC,IAAjC;YACAP,UAAU,CAACM,gBAAX,GAA8BA,gBAA9B;UACD,CAPI,CAQL;;;UACA,MAAMN,UAAN;QACD;MACF,CAxBD,MAwBO,IAAIL,kBAAJ,EAAwB;QAC7B;QACA,KAAKa,qBAAL,GAF6B,CAG7B;QACA;;QACA,OAAOjC,iBAAiB,EAAxB;MACD,CANM,MAMA;QACL;QACA,MAAMyB,UAAN;MACD;IACF,CApCD,MAoCO;MACL;MACA,MAAMd,CAAN;IACD;EACF,CAtDD,CA/KF,CAuOE;;;EACA7C,sDAEEoE,iBAFF,EAGEC,UAHF,EAGoB;IAElB,IAAMC,GAAG,GAAG,KAAKC,2BAAL,CAAiCnC,iBAAjC,EAA6CiC,UAA7C,CAAZ;IACA,OAAO,KAAKG,mBAAL,CAAyBJ,iBAAzB,EAA4CC,UAA5C,EAAwDC,GAAxD,CAAP;EACD,CAPD;;EASAtE,2DAEEoE,iBAFF,EAGEC,UAHF,EAIEC,GAJF,EAIa;IAJb;;IAME,IAAIG,aAAa,GAAG,KAAKC,kBAAL,CAAwBJ,GAAxB,CAApB;IACA,IAAIK,MAAJ;IACA,IAAIC,SAAJ;;IACA,IAAyBR,iBAAkB,CAACS,GAAnB,KAA2BC,SAApD,EAA+D;MAC7DH,MAAM,GAAwBP,iBAAkB,CAACS,GAAjD;MACAD,SAAS,GAAwBR,iBAAkB,CAACW,IAApD,CAF6D,CAG7D;;MACA,IAAIH,SAAS,KAAKE,SAAlB,EAA6B;QAC3B,IAAME,sBAAoB,GAAGP,aAA7B;;QACAA,aAAa,GAAG;UACd,OAAOG,SAAS,CAACzB,IAAV,CAAe8B,KAAf,KAAwBD,sBAAoB,CAAC7B,IAArB,CAA0B8B,KAA1B,CAA/B;QACD,CAFD;MAGD;IACF,CAVD,MAUO;MACLN,MAAM,GAAGP,iBAAT;IACD;;IAED,IAAIK,aAAa,CAACtB,IAAd,CAAmB,IAAnB,MAA6B,IAAjC,EAAuC;MACrC,OAAOwB,MAAM,CAACxB,IAAP,CAAY,IAAZ,CAAP;IACD;;IACD,OAAO2B,SAAP;EACD,CA3BD;;EA6BA9E,0DAEEkF,cAFF,EAGEd,iBAHF,EAGmE;IAEjE,IAAMe,KAAK,GAAG,KAAKZ,2BAAL,CACZnC,uBADY,EAEZ8C,cAFY,CAAd;IAIA,OAAO,KAAKE,uBAAL,CACLF,cADK,EAELd,iBAFK,EAGLe,KAHK,CAAP;EAKD,CAdD;;EAgBAnF,+DAEEkF,cAFF,EAGEd,iBAHF,EAIEE,GAJF,EAIa;IAJb;;IAME,IAAIG,aAAa,GAAG,KAAKC,kBAAL,CAAwBJ,GAAxB,CAApB;IAEA,IAAIK,MAAJ;IACA,IAAIC,SAAJ;;IACA,IAAgCR,iBAAkB,CAACS,GAAnB,KAA2BC,SAA3D,EAAsE;MACpEH,MAAM,GAA+BP,iBAAkB,CAACS,GAAxD;MACAD,SAAS,GAA+BR,iBAAkB,CAACW,IAA3D,CAFoE,CAGpE;;MACA,IAAIH,SAAS,KAAKE,SAAlB,EAA6B;QAC3B,IAAMO,sBAAoB,GAAGZ,aAA7B;;QACAA,aAAa,GAAG;UACd,OAAOG,SAAS,CAACzB,IAAV,CAAe8B,KAAf,KAAwBI,sBAAoB,CAAClC,IAArB,CAA0B8B,KAA1B,CAA/B;QACD,CAFD;MAGD;IACF,CAVD,MAUO;MACLN,MAAM,GAAGP,iBAAT;IACD;;IAED,IAAeK,aAAc,CAACtB,IAAf,CAAoB,IAApB,MAA8B,IAA7C,EAAmD;MACjD,IAAImC,QAAQ,GAAG,KAAKC,kBAAL,CAAwBZ,MAAxB,CAAf;;MACA,OACaF,aAAc,CAACtB,IAAf,CAAoB,IAApB,MAA8B,IAA9B,IACXmC,QAAQ,KAAK,IAFf,EAGE;QACAA,QAAQ,GAAG,KAAKC,kBAAL,CAAwBZ,MAAxB,CAAX;MACD;IACF,CARD,MAQO;MACL,MAAM,KAAKa,uBAAL,CACJN,cADI,EAEJO,sBAAUC,oBAFN,EAGwBtB,iBAAkB,CAACuB,OAH3C,CAAN;IAKD,CAlCU,CAoCX;IACA;IACA;IAEA;;;IACA,KAAKC,2BAAL,CACE,KAAKC,kBADP,EAEE,CAACX,cAAD,EAAiBd,iBAAjB,CAFF,EAGOK,aAHP,EAIErC,uBAJF,EAKE8C,cALF,EAMEY,+CANF;EAQD,CArDD;;EAuDA9F,kEAEEkF,cAFF,EAGEa,OAHF,EAGuC;IAErC,IAAMZ,KAAK,GAAG,KAAKZ,2BAAL,CACZnC,2BADY,EAEZ8C,cAFY,CAAd;IAIA,KAAKc,+BAAL,CAAqCd,cAArC,EAAqDa,OAArD,EAA8DZ,KAA9D;EACD,CAVD;;EAYAnF,uEAEEkF,cAFF,EAGEa,OAHF,EAIEzB,GAJF,EAIa;IAJb;;IAME,IAAMK,MAAM,GAAGoB,OAAO,CAAClB,GAAvB;IACA,IAAMoB,SAAS,GAAGF,OAAO,CAACG,GAA1B;IAEA,IAAMC,2BAA2B,GAAG,KAAKzB,kBAAL,CAAwBJ,GAAxB,CAApC,CALW,CAOX;;IACA,IAAI6B,2BAA2B,CAAChD,IAA5B,CAAiC,IAAjC,MAA2C,IAA/C,EAAqD;MACnD;MAAsBwB,MAAO,CAACxB,IAAR,CAAa,IAAb,EAD6B,CAGnD;MACA;;MACA,IAAMiD,sBAAsB,GAAG;QAC7B,OAAOnB,KAAI,CAACzE,YAAL,CAAkByE,KAAI,CAACoB,EAAL,CAAQ,CAAR,CAAlB,EAA8BJ,SAA9B,CAAP;MACD,CAFD,CALmD,CASnD;;;MACA,OAAO,KAAKzF,YAAL,CAAkB,KAAK6F,EAAL,CAAQ,CAAR,CAAlB,EAA8BJ,SAA9B,MAA6C,IAApD,EAA0D;QACxD;QACA;QACA,KAAKK,OAAL,CAAaL,SAAb;QAEsBtB,MAAO,CAACxB,IAAR,CAAa,IAAb;MACvB,CAhBkD,CAkBnD;;;MACA,KAAKyC,2BAAL,CACE,KAAKW,2BADP,EAEE,CACErB,cADF,EAEEe,SAFF,EAGEG,sBAHF,EAIEzB,MAJF,EAKEmB,kDALF,CAFF,EASEM,sBATF,EAUEhE,2BAVF,EAWE8C,cAXF,EAYEY,kDAZF;IAcD,CAjCD,MAiCO;MACL,MAAM,KAAKN,uBAAL,CACJN,cADI,EAEJO,sBAAUe,mCAFN,EAGJT,OAAO,CAACJ,OAHJ,CAAN;IAKD;EACF,CApDD;;EAsDA3F,oDAEEkF,cAFF,EAGEd,iBAHF,EAG4D;IAE1D,IAAMe,KAAK,GAAG,KAAKZ,2BAAL,CAAiCnC,eAAjC,EAA2C8C,cAA3C,CAAd;IACA,OAAO,KAAKuB,iBAAL,CAAuBvB,cAAvB,EAAuCd,iBAAvC,EAA0De,KAA1D,CAAP;EACD,CAPD;;EASAnF,yDAEEkF,cAFF,EAGEd,iBAHF,EAIEE,GAJF,EAIa;IAJb;;IAME,IAAIoC,iBAAiB,GAAG,KAAKhC,kBAAL,CAAwBJ,GAAxB,CAAxB;IAEA,IAAIK,MAAJ;IACA,IAAIC,SAAJ;;IACA,IAAyBR,iBAAkB,CAACS,GAAnB,KAA2BC,SAApD,EAA+D;MAC7DH,MAAM,GAAwBP,iBAAkB,CAACS,GAAjD;MACAD,SAAS,GAAwBR,iBAAkB,CAACW,IAApD,CAF6D,CAG7D;;MACA,IAAIH,SAAS,KAAKE,SAAlB,EAA6B;QAC3B,IAAM6B,sBAAoB,GAAGD,iBAA7B;;QACAA,iBAAiB,GAAG;UAClB,OAAO9B,SAAS,CAACzB,IAAV,CAAe8B,KAAf,KAAwB0B,sBAAoB,CAACxD,IAArB,CAA0B8B,KAA1B,CAA/B;QACD,CAFD;MAGD;IACF,CAVD,MAUO;MACLN,MAAM,GAAGP,iBAAT;IACD;;IAED,IAAIkB,QAAQ,GAAG,IAAf;;IACA,OAAOoB,iBAAiB,CAACvD,IAAlB,CAAuB,IAAvB,MAAiC,IAAjC,IAAyCmC,QAAQ,KAAK,IAA7D,EAAmE;MACjEA,QAAQ,GAAG,KAAKC,kBAAL,CAAwBZ,MAAxB,CAAX;IACD,CAvBU,CAyBX;;;IACA,KAAKiB,2BAAL,CACE,KAAKgB,YADP,EAEE,CAAC1B,cAAD,EAAiBd,iBAAjB,CAFF,EAGOsC,iBAHP,EAIEtE,eAJF,EAKE8C,cALF,EAMEY,yCANF,EAOE;IACA;IACA;IACA;IACA;IACAR,QAZF;EAcD,CA5CD;;EA8CAtF,4DAEEkF,cAFF,EAGEa,OAHF,EAGiC;IAE/B,IAAMZ,KAAK,GAAG,KAAKZ,2BAAL,CAAiCnC,mBAAjC,EAA+C8C,cAA/C,CAAd;IACA,KAAK2B,yBAAL,CAA+B3B,cAA/B,EAA+Ca,OAA/C,EAAwDZ,KAAxD;EACD,CAPD;;EASAnF,iEAEEkF,cAFF,EAGEa,OAHF,EAIEzB,GAJF,EAIa;IAJb;;IAME,IAAMK,MAAM,GAAGoB,OAAO,CAAClB,GAAvB;IACA,IAAMoB,SAAS,GAAGF,OAAO,CAACG,GAA1B;IACA,IAAMY,oBAAoB,GAAG,KAAKpC,kBAAL,CAAwBJ,GAAxB,CAA7B,CAJW,CAMX;;IACA,IAAIwC,oBAAoB,CAAC3D,IAArB,CAA0B,IAA1B,MAAoC,IAAxC,EAA8C;MAC5CwB,MAAM,CAACxB,IAAP,CAAY,IAAZ;;MAEA,IAAMiD,sBAAsB,GAAG;QAC7B,OAAOnB,KAAI,CAACzE,YAAL,CAAkByE,KAAI,CAACoB,EAAL,CAAQ,CAAR,CAAlB,EAA8BJ,SAA9B,CAAP;MACD,CAFD,CAH4C,CAM5C;;;MACA,OAAO,KAAKzF,YAAL,CAAkB,KAAK6F,EAAL,CAAQ,CAAR,CAAlB,EAA8BJ,SAA9B,MAA6C,IAApD,EAA0D;QACxD;QACA;QACA,KAAKK,OAAL,CAAaL,SAAb,EAHwD,CAIxD;;QACAtB,MAAM,CAACxB,IAAP,CAAY,IAAZ;MACD,CAb2C,CAe5C;;;MACA,KAAKyC,2BAAL,CACE,KAAKW,2BADP,EAEE,CACErB,cADF,EAEEe,SAFF,EAGEG,sBAHF,EAIEzB,MAJF,EAKEmB,4CALF,CAFF,EASEM,sBATF,EAUEhE,mBAVF,EAWE8C,cAXF,EAYEY,4CAZF;IAcD;EACF,CA1CD;;EA4CA9F,mEAEEkF,cAFF,EAGEe,SAHF,EAIEG,sBAJF,EAKEzB,MALF,EAMEoC,uBANF,EAM2E;IAEzE,OAAOX,sBAAsB,EAA7B,EAAiC;MAC/B;MACA;MACA,KAAKE,OAAL,CAAaL,SAAb;MACAtB,MAAM,CAACxB,IAAP,CAAY,IAAZ;IACD,CAPwE,CASzE;IACA;IACA;IACA;IACA;;IACA;;;IACA,KAAKyC,2BAAL,CACE,KAAKW,2BADP,EAEE,CACErB,cADF,EAEEe,SAFF,EAGEG,sBAHF,EAIEzB,MAJF,EAKEoC,uBALF,CAFF,EASEX,sBATF,EAUEhE,2BAVF,EAWE8C,cAXF,EAYE6B,uBAZF;EAcD,CAnCD;;EAqCA/G,0DAAwC2E,MAAxC,EAAwD;IACtD,IAAMqC,eAAe,GAAG,KAAKC,gBAAL,EAAxB;IACAtC,MAAM,CAACxB,IAAP,CAAY,IAAZ;IACA,IAAM+D,cAAc,GAAG,KAAKD,gBAAL,EAAvB,CAHsD,CAKtD;IACA;;IACA,OAAOC,cAAc,GAAGF,eAAxB;EACD,CARD;;EAUAhH,kDAEEmH,UAFF,EAGE9C,UAHF,EAGoB;IAElB,IAAMc,KAAK,GAAG,KAAKZ,2BAAL,CAAiCnC,aAAjC,EAAyCiC,UAAzC,CAAd;IACA,IAAM+C,IAAI,GAAGpG,gBAAQmG,UAAR,IACRA,UADQ,GAERA,UAAoC,CAACtC,GAF1C;IAIA,IAAMwC,MAAM,GAAG,KAAK3C,kBAAL,CAAwBS,KAAxB,CAAf;IACA,IAAMmC,YAAY,GAAGD,MAAM,CAAClE,IAAP,CAAY,IAAZ,EAAkBiE,IAAlB,CAArB;;IACA,IAAIE,YAAY,KAAKxC,SAArB,EAAgC;MAC9B,IAAMyC,iBAAiB,GAAQH,IAAI,CAACE,YAAD,CAAnC;MACA,OAAOC,iBAAiB,CAACC,GAAlB,CAAsBrE,IAAtB,CAA2B,IAA3B,CAAP;IACD;;IACD,KAAKsE,mBAAL,CACEpD,UADF,EAEG8C,UAAoC,CAACxB,OAFxC;EAID,CApBD;;EAsBA3F;IACE,KAAKa,UAAL,CAAgB6G,GAAhB;IACA,KAAK5G,qBAAL,CAA2B4G,GAA3B,GAFF,CAIE;;IACA,KAAKC,qBAAL;;IAEA,IAAI,KAAK9G,UAAL,CAAgB8B,MAAhB,KAA2B,CAA3B,IAAgC,KAAKiF,cAAL,OAA0B,KAA9D,EAAqE;MACnE,IAAMC,iBAAiB,GAAG,KAAKxB,EAAL,CAAQ,CAAR,CAA1B;MACA,IAAMyB,MAAM,GAAG,KAAKC,oBAAL,CAA0BC,6BAA1B,CAAwD;QACrEC,cAAc,EAAEJ,iBADqD;QAErEhG,QAAQ,EAAE,KAAKqG,mBAAL;MAF2D,CAAxD,CAAf;MAIA,KAAKC,UAAL,CAAgB,IAAIzE,8CAAJ,CAA+BoE,MAA/B,EAAuCD,iBAAvC,CAAhB;IACD;EACF,CAfD;;EAiBA7H,uDAEEoI,UAFF,EAGEC,GAHF,EAIEtC,OAJF,EAI6B;IAE3B,IAAIuC,UAAJ;;IACA,IAAI;MACF,IAAMhG,IAAI,GAAGyD,OAAO,KAAKjB,SAAZ,GAAwBiB,OAAO,CAACwC,IAAhC,GAAuCzD,SAApD;MACAwD,UAAU,GAAGF,UAAU,CAACjF,IAAX,CAAgB,IAAhB,EAAsBkF,GAAtB,EAA2B/F,IAA3B,CAAb;MACA,KAAKkG,kBAAL,CACEF,UADF,EAEEvC,OAAO,KAAKjB,SAAZ,IAAyBiB,OAAO,CAAC0C,KAAR,KAAkB3D,SAA3C,GACIiB,OAAO,CAAC0C,KADZ,GAEUL,UAAW,CAACvG,QAJxB;MAMA,OAAOyG,UAAP;IACD,CAVD,CAUE,OAAOzF,CAAP,EAAU;MACV,KAAK6F,oBAAL,CAA0B7F,CAA1B,EAA6BkD,OAA7B,EAA4CqC,UAAW,CAACvG,QAAxD;IACD;EACF,CApBD;;EAsBA7B,4DAEE6C,CAFF,EAGEkD,OAHF,EAIElE,QAJF,EAIkB;IAEhB,IAAI6B,2CAAuBb,CAAvB,KAA6BA,CAAC,CAACoB,gBAAF,KAAuBa,SAAxD,EAAmE;MACjE,KAAK0D,kBAAL,CACE3F,CAAC,CAACoB,gBADJ,EAEE8B,OAAO,KAAKjB,SAAZ,IAAyBiB,OAAO,CAAC0C,KAAR,KAAkB3D,SAA3C,GACIiB,OAAO,CAAC0C,KADZ,GAEI5G,QAJN;MAOA,OAAOgB,CAAC,CAACoB,gBAAT;IACD;;IACD,MAAMpB,CAAN;EACD,CAjBD;;EAmBA7C,uDAEEoB,OAFF,EAGEiH,GAHF,EAIEtC,OAJF,EAI4B;IAE1B,IAAI4C,aAAJ;;IACA,IAAI;MACF,IAAMC,SAAS,GAAG,KAAKvC,EAAL,CAAQ,CAAR,CAAlB;;MACA,IAAI,KAAK7F,YAAL,CAAkBoI,SAAlB,EAA6BxH,OAA7B,MAA0C,IAA9C,EAAoD;QAClD,KAAKyH,YAAL;QACAF,aAAa,GAAGC,SAAhB;MACD,CAHD,MAGO;QACL,KAAKE,oBAAL,CAA0B1H,OAA1B,EAAmCwH,SAAnC,EAA8C7C,OAA9C;MACD;IACF,CARD,CAQE,OAAOgD,gBAAP,EAAyB;MACzBJ,aAAa,GAAG,KAAKK,uBAAL,CACd5H,OADc,EAEdiH,GAFc,EAGdU,gBAHc,CAAhB;IAKD;;IAED,KAAKE,eAAL,CACElD,OAAO,KAAKjB,SAAZ,IAAyBiB,OAAO,CAAC0C,KAAR,KAAkB3D,SAA3C,GACIiB,OAAO,CAAC0C,KADZ,GAEIrH,OAAO,CAACC,IAHd,EAIEsH,aAJF;IAMA,OAAOA,aAAP;EACD,CA9BD;;EAgCA3I,4DAEEoB,OAFF,EAGEwH,SAHF,EAIE7C,OAJF,EAI4B;IAE1B,IAAImD,GAAJ;IACA,IAAMC,aAAa,GAAG,KAAK9C,EAAL,CAAQ,CAAR,CAAtB;;IACA,IAAIN,OAAO,KAAKjB,SAAZ,IAAyBiB,OAAO,CAACJ,OAArC,EAA8C;MAC5CuD,GAAG,GAAGnD,OAAO,CAACJ,OAAd;IACD,CAFD,MAEO;MACLuD,GAAG,GAAG,KAAKnB,oBAAL,CAA0BqB,yBAA1B,CAAoD;QACxDC,QAAQ,EAAEjI,OAD8C;QAExDkI,MAAM,EAAEV,SAFgD;QAGxDW,QAAQ,EAAEJ,aAH8C;QAIxDtH,QAAQ,EAAE,KAAKqG,mBAAL;MAJ8C,CAApD,CAAN;IAMD;;IACD,MAAM,KAAKC,UAAL,CACJ,IAAIzE,4CAAJ,CAA6BwF,GAA7B,EAAkCN,SAAlC,EAA6CO,aAA7C,CADI,CAAN;EAGD,CArBD;;EAuBAnJ,+DAEEoB,OAFF,EAGEiH,GAHF,EAIEU,gBAJF,EAIyB;IAEvB;IACA;IACA,IACE,KAAKtF,eAAL,IACA;IACAsF,gBAAgB,CAAC1H,IAAjB,KAA0B,0BAF1B,IAGA,CAAC,KAAKmC,cAAL,EAJH,EAKE;MACA,IAAMgG,OAAO,GAAG,KAAKC,2BAAL,CAAsCrI,OAAtC,EAA+CiH,GAA/C,CAAhB;;MACA,IAAI;QACF,OAAO,KAAKqB,iBAAL,CAA4BtI,OAA5B,EAAqCoI,OAArC,CAAP;MACD,CAFD,CAEE,OAAOG,mBAAP,EAA4B;QAC5B,IAAIA,mBAAmB,CAACtI,IAApB,KAA6BuI,wCAAjC,EAA6D;UAC3D;UACA;UACA,MAAMb,gBAAN;QACD,CAJD,MAIO;UACL,MAAMY,mBAAN;QACD;MACF;IACF,CAlBD,MAkBO;MACL,MAAMZ,gBAAN;IACD;EACF,CA7BD;;EA+BA/I;IACE;IACA,IAAM6J,WAAW,GAAG,KAAKC,MAAzB;IACA,IAAMC,cAAc,GAAG/I,iBAAS,KAAKH,UAAd,CAAvB;IACA,OAAO;MACLiJ,MAAM,EAAED,WADH;MAELG,UAAU,EAAE,KAAKC,gBAAL,EAFP;MAGLpJ,UAAU,EAAEkJ,cAHP;MAILrH,SAAS,EAAE,KAAKA;IAJX,CAAP;EAMD,CAVD;;EAYA1C,wDAAsCkK,QAAtC,EAA4D;IAC1D,KAAKJ,MAAL,GAAcI,QAAQ,CAACJ,MAAvB;IACA,KAAKK,gBAAL,CAAsBD,QAAQ,CAACF,UAA/B;IACA,KAAKnJ,UAAL,GAAkBqJ,QAAQ,CAACrJ,UAA3B;EACD,CAJD;;EAMAb,iEAEEmC,SAFF,EAGEiI,QAHF,EAIEnH,gBAJF,EAI0B;IAExB,KAAKnC,qBAAL,CAA2BuJ,IAA3B,CAAgCpH,gBAAhC;IACA,KAAKpC,UAAL,CAAgBwJ,IAAhB,CAAqBlI,SAArB,EAHwB,CAIxB;;IACA,KAAKmI,wBAAL,CAA8BF,QAA9B,EAAwCjI,SAAxC;EACD,CAVD;;EAYAnC;IACE,OAAO,KAAKY,mBAAL,CAAyB+B,MAAzB,KAAoC,CAA3C;EACD,CAFD;;EAIA3C;IACE,IAAMmC,SAAS,GAAG,KAAKoI,4BAAL,EAAlB;IACA,OAAO,KAAKlK,mBAAL,CAAyB8B,SAAzB,CAAP;EACD,CAHD;;EAKAnC,+DAA6CmC,SAA7C,EAA8D;IAC5D,OAAO,KAAK9B,mBAAL,CAAyB8B,SAAzB,CAAP;EACD,CAFD;;EAIOnC,4CAAP;IACE,OAAO,KAAKQ,YAAL,CAAkB,KAAK6F,EAAL,CAAQ,CAAR,CAAlB,EAA8B5E,mBAA9B,CAAP;EACD,CAFM;;EAIAzB,mCAAP;IACE,KAAKwK,eAAL;IAEA,KAAK5J,mBAAL,GAA2B,EAA3B;IACA,KAAKkJ,MAAL,GAAc,EAAd;IACA,KAAKjJ,UAAL,GAAkB,EAAlB,CALF,CAME;;IACA,KAAK6B,SAAL,GAAiB,EAAjB;IACA,KAAK5B,qBAAL,GAA6B,EAA7B;EACD,CATM;;EAUT;AAAC,CAjxBD;;AAAa2J","names":["RecognizerEngine","tokenVocabulary","config","className","lang_extensions_1","shortRuleNameToFull","fullRuleNameToShort","ruleShortNameIdx","tokenMatcher","tokens_1","definedRulesNames","tokensMap","isBackTrackingStack","RULE_STACK","RULE_OCCURRENCE_STACK","gastProductionsCache","utils_1","Error","startOffset","acc","tokType","name","modes","allTokenTypes","uniqueTokens","tokens_public_1","noTokenCategoriesUsed","tokenConstructor","categoryMatches","ruleName","impl","selfAnalysisDone","resyncEnabled","parser_1","recoveryValueFunc","shortName","keys_1","invokeRuleWithTry","args","outputCst","apply","cst","CST_STACK","length","cstPostRule","e","invokeRuleCatch","ruleFinallyStateUpdate","wrappedGrammarRule","idxInCallingRule","ruleInvocationStateUpdate","call","ruleNamePropName","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","isBackTracking","recoveryEnabled","exceptions_public_1","recogError","reSyncTokType","findReSyncTokenType","isInCurrentRuleReSyncSet","resyncedTokens","reSyncTo","partialCstResult","recoveredNode","moveToTerminatedState","actionORMethodDef","occurrence","key","getKeyForAutomaticLookahead","optionInternalLogic","lookAheadFunc","getLaFuncFromCache","action","predicate","DEF","undefined","GATE","orgLookaheadFunction_1","_this","prodOccurrence","laKey","atLeastOneInternalLogic","orgLookaheadFunction_2","notStuck","doSingleRepetition","raiseEarlyExitException","lookahead_1","REPETITION_MANDATORY","ERR_MSG","attemptInRepetitionRecovery","atLeastOneInternal","interpreter_1","options","atLeastOneSepFirstInternalLogic","separator","SEP","firstIterationLookaheadFunc","separatorLookAheadFunc","LA","CONSUME","repetitionSepSecondInternal","REPETITION_MANDATORY_WITH_SEPARATOR","manyInternalLogic","lookaheadFunction","orgLookaheadFunction_3","manyInternal","manySepFirstInternalLogic","firstIterationLaFunc","nextTerminalAfterWalker","beforeIteration","getLexerPosition","afterIteration","altsOrOpts","alts","laFunc","altIdxToTake","chosenAlternative","ALT","raiseNoAltException","pop","cstFinallyStateUpdate","isAtEndOfInput","firstRedundantTok","errMsg","errorMessageProvider","buildNotAllInputParsedMessage","firstRedundant","getCurrRuleFullName","SAVE_ERROR","ruleToCall","idx","ruleResult","ARGS","cstPostNonTerminal","LABEL","subruleInternalError","consumedToken","nextToken","consumeToken","consumeInternalError","eFromConsumption","consumeInternalRecovery","cstPostTerminal","msg","previousToken","buildMismatchTokenMessage","expected","actual","previous","follows","getFollowsForInRuleRecovery","tryInRuleRecovery","eFromInRuleRecovery","recoverable_1","savedErrors","errors","savedRuleStack","lexerState","exportLexerState","newState","importLexerState","fullName","push","cstInvocationStateUpdate","getLastExplicitRuleShortName","resetLexerState","exports"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/recognizer_engine.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}