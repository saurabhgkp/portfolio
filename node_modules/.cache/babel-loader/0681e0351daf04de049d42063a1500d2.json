{"ast":null,"code":"import { Vector4 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\nfunction Vector4Node(x, y, z, w) {\n  InputNode.call(this, 'v4');\n  this.value = x instanceof Vector4 ? x : new Vector4(x, y, z, w);\n}\nVector4Node.prototype = Object.create(InputNode.prototype);\nVector4Node.prototype.constructor = Vector4Node;\nVector4Node.prototype.nodeType = 'Vector4';\nNodeUtils.addShortcuts(Vector4Node.prototype, 'value', ['x', 'y', 'z', 'w']);\nVector4Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/) {\n  return builder.format('vec4( ' + this.x + ', ' + this.y + ', ' + this.z + ', ' + this.w + ' )', type, output);\n};\nVector4Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\nVector4Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    data.w = this.w;\n    if (this.readonly === true) data.readonly = true;\n  }\n  return data;\n};\nexport { Vector4Node };","map":null,"metadata":{},"sourceType":"module"}