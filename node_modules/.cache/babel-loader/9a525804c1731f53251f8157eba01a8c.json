{"ast":null,"code":"var NodeLib = {\n  nodes: {},\n  keywords: {},\n  add: function add(node) {\n    this.nodes[node.name] = node;\n  },\n  addKeyword: function addKeyword(name, callback, cache) {\n    cache = cache !== undefined ? cache : true;\n    this.keywords[name] = {\n      callback: callback,\n      cache: cache\n    };\n  },\n  remove: function remove(node) {\n    delete this.nodes[node.name];\n  },\n  removeKeyword: function removeKeyword(name) {\n    delete this.keywords[name];\n  },\n  get: function get(name) {\n    return this.nodes[name];\n  },\n  getKeyword: function getKeyword(name, builder) {\n    return this.keywords[name].callback.call(this, builder);\n  },\n  getKeywordData: function getKeywordData(name) {\n    return this.keywords[name];\n  },\n  contains: function contains(name) {\n    return this.nodes[name] !== undefined;\n  },\n  containsKeyword: function containsKeyword(name) {\n    return this.keywords[name] !== undefined;\n  }\n};\nexport { NodeLib };","map":null,"metadata":{},"sourceType":"module"}