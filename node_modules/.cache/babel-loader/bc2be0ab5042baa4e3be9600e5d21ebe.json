{"ast":null,"code":"var _jsxFileName = \"/home/cliffexpc63/my example/portfolio/src/Box/PlaneOne.js\",\n    _s = $RefreshSig$();\n\nimport { usePlane } from \"@react-three/cannon\";\nimport React, { useMemo } from 'react';\nimport { TextureLoader, RepeatWrapping } from 'three';\nimport grass from '../grass.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nfunction PlaneOne() {\n  _s();\n\n  const texture = useMemo(() => {\n    const t = new TextureLoader().load(grass);\n    t.wrapS = RepeatWrapping;\n    t.wrapT = RepeatWrapping;\n    t.repeat.set(100, 100);\n    return t;\n  }, []);\n  const [ref] = usePlane(() => ({\n    rotation: [-Math.PI / 2, 0, 0]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: ref,\n    rotation: [-Math.PI / 2, 0, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n      attach: \"geometry\",\n      args: [3, 100]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"meshLambertMaterial\", {\n      attach: \"material\" //   map={texture} \n      ,\n      color: \"#000000\",\n      transparent: true,\n      opacity: 0.4,\n      roughness: 1,\n      metalness: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n\n_s(PlaneOne, \"Yxx47kUp1mP4iug/A9MIdOujD+w=\", false, function () {\n  return [usePlane];\n});\n\n_c = PlaneOne;\nexport default PlaneOne;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlaneOne\");","map":{"version":3,"names":["usePlane","React","useMemo","TextureLoader","RepeatWrapping","grass","PlaneOne","texture","t","load","wrapS","wrapT","repeat","set","ref","rotation","Math","PI"],"sources":["/home/cliffexpc63/my example/portfolio/src/Box/PlaneOne.js"],"sourcesContent":["import { usePlane } from \"@react-three/cannon\";\nimport React, { useMemo } from 'react';\nimport {\n  TextureLoader,\n  RepeatWrapping,\n} from 'three';\nimport grass from '../grass.jpg';\n\n;\n\nfunction PlaneOne() {\n\n  const texture = useMemo(() => {\n    const t = new TextureLoader().load(grass)\n    t.wrapS = RepeatWrapping\n    t.wrapT = RepeatWrapping\n    t.repeat.set(100, 100)\n    return t\n  }, [])\n\n\n\n\n    const [ref] = usePlane(() => ({\n      rotation: [-Math.PI / 2, 0, 0],\n    }));\n    return (\n      <mesh ref={ref} rotation={[-Math.PI / 2, 0, 0]}>\n        \t<planeBufferGeometry attach=\"geometry\" args={[3, 100]} />\n\n        <meshLambertMaterial attach=\"material\" \n      //   map={texture} \n        color= \"#000000\" \n         transparent \n        opacity={0.4}\n        roughness={1}\n        metalness={0} \n        \n        />\n      </mesh>  \n    );\n  }\n  export default PlaneOne;\n\n\n\n\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SACEC,aADF,EAEEC,cAFF,QAGO,OAHP;AAIA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAElB,MAAMC,OAAO,GAAGL,OAAO,CAAC,MAAM;IAC5B,MAAMM,CAAC,GAAG,IAAIL,aAAJ,GAAoBM,IAApB,CAAyBJ,KAAzB,CAAV;IACAG,CAAC,CAACE,KAAF,GAAUN,cAAV;IACAI,CAAC,CAACG,KAAF,GAAUP,cAAV;IACAI,CAAC,CAACI,MAAF,CAASC,GAAT,CAAa,GAAb,EAAkB,GAAlB;IACA,OAAOL,CAAP;EACD,CANsB,EAMpB,EANoB,CAAvB;EAWE,MAAM,CAACM,GAAD,IAAQd,QAAQ,CAAC,OAAO;IAC5Be,QAAQ,EAAE,CAAC,CAACC,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB;EADkB,CAAP,CAAD,CAAtB;EAGA,oBACE;IAAM,GAAG,EAAEH,GAAX;IAAgB,QAAQ,EAAE,CAAC,CAACE,IAAI,CAACC,EAAN,GAAW,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAA1B;IAAA,wBACG;MAAqB,MAAM,EAAC,UAA5B;MAAuC,IAAI,EAAE,CAAC,CAAD,EAAI,GAAJ;IAA7C;MAAA;MAAA;MAAA;IAAA,QADH,eAGE;MAAqB,MAAM,EAAC,UAA5B,CACF;MADE;MAEA,KAAK,EAAE,SAFP;MAGC,WAAW,MAHZ;MAIA,OAAO,EAAE,GAJT;MAKA,SAAS,EAAE,CALX;MAMA,SAAS,EAAE;IANX;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GA/BMX,Q;UAaSN,Q;;;KAbTM,Q;AAgCP,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}