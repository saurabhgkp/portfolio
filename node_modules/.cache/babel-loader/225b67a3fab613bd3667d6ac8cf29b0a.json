{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar type_1 = __importDefault(require(\"./nodes/type\"));\n\nfunction isTag(node) {\n  return node && node.nodeType === type_1.default.ELEMENT_NODE;\n}\n\nfunction getAttributeValue(elem, name) {\n  return isTag(elem) ? elem.getAttribute(name) : undefined;\n}\n\nfunction getName(elem) {\n  return (elem && elem.rawTagName || '').toLowerCase();\n}\n\nfunction getChildren(node) {\n  return node && node.childNodes;\n}\n\nfunction getParent(node) {\n  return node ? node.parentNode : null;\n}\n\nfunction getText(node) {\n  return node.text;\n}\n\nfunction removeSubsets(nodes) {\n  var idx = nodes.length;\n  var node;\n  var ancestor;\n  var replace; // Check if each node (or one of its ancestors) is already contained in the\n  // array.\n\n  while (--idx > -1) {\n    node = ancestor = nodes[idx]; // Temporarily remove the node under consideration\n\n    nodes[idx] = null;\n    replace = true;\n\n    while (ancestor) {\n      if (nodes.indexOf(ancestor) > -1) {\n        replace = false;\n        nodes.splice(idx, 1);\n        break;\n      }\n\n      ancestor = getParent(ancestor);\n    } // If the node has been found to be unique, re-insert it.\n\n\n    if (replace) {\n      nodes[idx] = node;\n    }\n  }\n\n  return nodes;\n}\n\nfunction existsOne(test, elems) {\n  return elems.some(function (elem) {\n    return isTag(elem) ? test(elem) || existsOne(test, getChildren(elem)) : false;\n  });\n}\n\nfunction getSiblings(node) {\n  var parent = getParent(node);\n  return parent ? getChildren(parent) : [];\n}\n\nfunction hasAttrib(elem, name) {\n  return getAttributeValue(elem, name) !== undefined;\n}\n\nfunction findOne(test, elems) {\n  var elem = null;\n\n  for (var i = 0, l = elems === null || elems === void 0 ? void 0 : elems.length; i < l && !elem; i++) {\n    var el = elems[i];\n\n    if (test(el)) {\n      elem = el;\n    } else {\n      var childs = getChildren(el);\n\n      if (childs && childs.length > 0) {\n        elem = findOne(test, childs);\n      }\n    }\n  }\n\n  return elem;\n}\n\nfunction findAll(test, nodes) {\n  var result = [];\n\n  for (var i = 0, j = nodes.length; i < j; i++) {\n    if (!isTag(nodes[i])) continue;\n    if (test(nodes[i])) result.push(nodes[i]);\n    var childs = getChildren(nodes[i]);\n    if (childs) result = result.concat(findAll(test, childs));\n  }\n\n  return result;\n}\n\nexports.default = {\n  isTag: isTag,\n  getAttributeValue: getAttributeValue,\n  getName: getName,\n  getChildren: getChildren,\n  getParent: getParent,\n  getText: getText,\n  removeSubsets: removeSubsets,\n  existsOne: existsOne,\n  getSiblings: getSiblings,\n  hasAttrib: hasAttrib,\n  findOne: findOne,\n  findAll: findAll\n};","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","type_1","require","isTag","node","nodeType","default","ELEMENT_NODE","getAttributeValue","elem","name","getAttribute","undefined","getName","rawTagName","toLowerCase","getChildren","childNodes","getParent","parentNode","getText","text","removeSubsets","nodes","idx","length","ancestor","replace","indexOf","splice","existsOne","test","elems","some","getSiblings","parent","hasAttrib","findOne","i","l","el","childs","findAll","result","j","push","concat"],"sources":["/home/cliffexpc63/my example/portfolio/node_modules/node-html-parser/dist/matcher.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar type_1 = __importDefault(require(\"./nodes/type\"));\nfunction isTag(node) {\n    return node && node.nodeType === type_1.default.ELEMENT_NODE;\n}\nfunction getAttributeValue(elem, name) {\n    return isTag(elem) ? elem.getAttribute(name) : undefined;\n}\nfunction getName(elem) {\n    return ((elem && elem.rawTagName) || '').toLowerCase();\n}\nfunction getChildren(node) {\n    return node && node.childNodes;\n}\nfunction getParent(node) {\n    return node ? node.parentNode : null;\n}\nfunction getText(node) {\n    return node.text;\n}\nfunction removeSubsets(nodes) {\n    var idx = nodes.length;\n    var node;\n    var ancestor;\n    var replace;\n    // Check if each node (or one of its ancestors) is already contained in the\n    // array.\n    while (--idx > -1) {\n        node = ancestor = nodes[idx];\n        // Temporarily remove the node under consideration\n        nodes[idx] = null;\n        replace = true;\n        while (ancestor) {\n            if (nodes.indexOf(ancestor) > -1) {\n                replace = false;\n                nodes.splice(idx, 1);\n                break;\n            }\n            ancestor = getParent(ancestor);\n        }\n        // If the node has been found to be unique, re-insert it.\n        if (replace) {\n            nodes[idx] = node;\n        }\n    }\n    return nodes;\n}\nfunction existsOne(test, elems) {\n    return elems.some(function (elem) {\n        return isTag(elem) ? test(elem) || existsOne(test, getChildren(elem)) : false;\n    });\n}\nfunction getSiblings(node) {\n    var parent = getParent(node);\n    return parent ? getChildren(parent) : [];\n}\nfunction hasAttrib(elem, name) {\n    return getAttributeValue(elem, name) !== undefined;\n}\nfunction findOne(test, elems) {\n    var elem = null;\n    for (var i = 0, l = elems === null || elems === void 0 ? void 0 : elems.length; i < l && !elem; i++) {\n        var el = elems[i];\n        if (test(el)) {\n            elem = el;\n        }\n        else {\n            var childs = getChildren(el);\n            if (childs && childs.length > 0) {\n                elem = findOne(test, childs);\n            }\n        }\n    }\n    return elem;\n}\nfunction findAll(test, nodes) {\n    var result = [];\n    for (var i = 0, j = nodes.length; i < j; i++) {\n        if (!isTag(nodes[i]))\n            continue;\n        if (test(nodes[i]))\n            result.push(nodes[i]);\n        var childs = getChildren(nodes[i]);\n        if (childs)\n            result = result.concat(findAll(test, childs));\n    }\n    return result;\n}\nexports.default = {\n    isTag: isTag,\n    getAttributeValue: getAttributeValue,\n    getName: getName,\n    getChildren: getChildren,\n    getParent: getParent,\n    getText: getText,\n    removeSubsets: removeSubsets,\n    existsOne: existsOne,\n    getSiblings: getSiblings,\n    hasAttrib: hasAttrib,\n    findOne: findOne,\n    findAll: findAll\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}