{"ast":null,"code":"import { Vector3 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\nfunction Vector3Node(x, y, z) {\n  InputNode.call(this, 'v3');\n  this.value = x instanceof Vector3 ? x : new Vector3(x, y, z);\n}\nVector3Node.prototype = Object.create(InputNode.prototype);\nVector3Node.prototype.constructor = Vector3Node;\nVector3Node.prototype.nodeType = 'Vector3';\nNodeUtils.addShortcuts(Vector3Node.prototype, 'value', ['x', 'y', 'z']);\nVector3Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/) {\n  return builder.format('vec3( ' + this.x + ', ' + this.y + ', ' + this.z + ' )', type, output);\n};\nVector3Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\nVector3Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    data.z = this.z;\n    if (this.readonly === true) data.readonly = true;\n  }\n  return data;\n};\nexport { Vector3Node };","map":null,"metadata":{},"sourceType":"module"}