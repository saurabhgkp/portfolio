{"ast":null,"code":"import _classCallCheck from \"/home/cliffexpc63/my example/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/cliffexpc63/my example/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cliffexpc63/my example/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cliffexpc63/my example/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cliffexpc63/my example/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { Euler, EventDispatcher, Vector3 } from 'three';\nvar _euler = new Euler(0, 0, 0, 'YXZ');\nvar _vector = new Vector3();\nvar _changeEvent = {\n  type: 'change'\n};\nvar _lockEvent = {\n  type: 'lock'\n};\nvar _unlockEvent = {\n  type: 'unlock'\n};\nvar _PI_2 = Math.PI / 2;\nvar PointerLockControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(PointerLockControls, _EventDispatcher);\n  function PointerLockControls(camera, domElement) {\n    var _this;\n    _classCallCheck(this, PointerLockControls);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PointerLockControls).call(this));\n    if (domElement === undefined) {\n      console.warn('THREE.PointerLockControls: The second parameter \"domElement\" is now mandatory.');\n      domElement = document.body;\n    }\n    _this.domElement = domElement;\n    _this.isLocked = false;\n\n    // Set to constrain the pitch of the camera\n    // Range is 0 to Math.PI radians\n    _this.minPolarAngle = 0; // radians\n    _this.maxPolarAngle = Math.PI; // radians\n\n    var scope = _assertThisInitialized(_assertThisInitialized(_this));\n    function onMouseMove(event) {\n      if (scope.isLocked === false) return;\n      var movementX = event.movementX || event.mozMovementX || event.webkitMovementX || 0;\n      var movementY = event.movementY || event.mozMovementY || event.webkitMovementY || 0;\n      _euler.setFromQuaternion(camera.quaternion);\n      _euler.y -= movementX * 0.002;\n      _euler.x -= movementY * 0.002;\n      _euler.x = Math.max(_PI_2 - scope.maxPolarAngle, Math.min(_PI_2 - scope.minPolarAngle, _euler.x));\n      camera.quaternion.setFromEuler(_euler);\n      scope.dispatchEvent(_changeEvent);\n    }\n    function onPointerlockChange() {\n      if (scope.domElement.ownerDocument.pointerLockElement === scope.domElement) {\n        scope.dispatchEvent(_lockEvent);\n        scope.isLocked = true;\n      } else {\n        scope.dispatchEvent(_unlockEvent);\n        scope.isLocked = false;\n      }\n    }\n    function onPointerlockError() {\n      console.error('THREE.PointerLockControls: Unable to use Pointer Lock API');\n    }\n    _this.connect = function () {\n      scope.domElement.ownerDocument.addEventListener('mousemove', onMouseMove);\n      scope.domElement.ownerDocument.addEventListener('pointerlockchange', onPointerlockChange);\n      scope.domElement.ownerDocument.addEventListener('pointerlockerror', onPointerlockError);\n    };\n    _this.disconnect = function () {\n      scope.domElement.ownerDocument.removeEventListener('mousemove', onMouseMove);\n      scope.domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerlockChange);\n      scope.domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerlockError);\n    };\n    _this.dispose = function () {\n      this.disconnect();\n    };\n    _this.getObject = function () {\n      // retaining this method for backward compatibility\n\n      return camera;\n    };\n    _this.getDirection = function () {\n      var direction = new Vector3(0, 0, -1);\n      return function (v) {\n        return v.copy(direction).applyQuaternion(camera.quaternion);\n      };\n    }();\n    _this.moveForward = function (distance) {\n      // move forward parallel to the xz-plane\n      // assumes camera.up is y-up\n\n      _vector.setFromMatrixColumn(camera.matrix, 0);\n      _vector.crossVectors(camera.up, _vector);\n      camera.position.addScaledVector(_vector, distance);\n    };\n    _this.moveRight = function (distance) {\n      _vector.setFromMatrixColumn(camera.matrix, 0);\n      camera.position.addScaledVector(_vector, distance);\n    };\n    _this.lock = function () {\n      this.domElement.requestPointerLock();\n    };\n    _this.unlock = function () {\n      scope.domElement.ownerDocument.exitPointerLock();\n    };\n    _this.connect();\n    return _this;\n  }\n  return PointerLockControls;\n}(EventDispatcher);\nexport { PointerLockControls };","map":null,"metadata":{},"sourceType":"module"}