{"ast":null,"code":"import { Node } from './Node.js';\nfunction VarNode(type, value) {\n  Node.call(this, type);\n  this.value = value;\n}\nVarNode.prototype = Object.create(Node.prototype);\nVarNode.prototype.constructor = VarNode;\nVarNode.prototype.nodeType = 'Var';\nVarNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.type);\n};\nVarNode.prototype.generate = function (builder, output) {\n  var varying = builder.getVar(this.uuid, this.type);\n  if (this.value && builder.isShader('vertex')) {\n    builder.addNodeCode(varying.name + ' = ' + this.value.build(builder, this.getType(builder)) + ';');\n  }\n  return builder.format(varying.name, this.getType(builder), output);\n};\nVarNode.prototype.copy = function (source) {\n  Node.prototype.copy.call(this, source);\n  this.type = source.type;\n  this.value = source.value;\n  return this;\n};\nVarNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.type = this.type;\n    if (this.value) data.value = this.value.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { VarNode };","map":null,"metadata":{},"sourceType":"module"}