{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/React.createContext({});\n\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\n\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\n\nconst GizmoHelper = _ref => {\n  let {\n    alignment = 'bottom-right',\n    margin = [80, 80],\n    renderPriority = 1,\n    onUpdate,\n    onTarget,\n    children: GizmoHelperComponent\n  } = _ref;\n  const size = useThree(_ref2 => {\n    let {\n      size\n    } = _ref2;\n    return size;\n  });\n  const mainCamera = useThree(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    return camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(_ref4 => {\n    let {\n      controls\n    } = _ref4;\n    return controls;\n  });\n  const gl = useThree(_ref5 => {\n    let {\n      gl\n    } = _ref5;\n    return gl;\n  });\n  const scene = useThree(_ref6 => {\n    let {\n      scene\n    } = _ref6;\n    return scene;\n  });\n  const invalidate = useThree(_ref7 => {\n    let {\n      invalidate\n    } = _ref7;\n    return invalidate;\n  });\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const beforeRender = () => {\n    var _gizmoRef$current; // Sync gizmo with main camera orientation\n\n\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["React","useThree","useFrame","createPortal","Object3D","Matrix4","Quaternion","Vector3","Scene","OrthographicCamera","useCamera","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","GizmoHelper","alignment","margin","renderPriority","onUpdate","onTarget","children","GizmoHelperComponent","size","mainCamera","camera","defaultControls","controls","gl","scene","invalidate","backgroundRef","useRef","gizmoRef","virtualCam","virtualScene","useState","animating","radius","focusPoint","tweenCamera","direction","current","position","distanceTo","copy","quaternion","multiplyScalar","add","lookAt","animateStep","delta","angleTo","step","rotateTowards","set","applyQuaternion","up","normalize","update","useEffect","background","beforeRender","_gizmoRef$current","invert","setFromRotationMatrix","_","autoClear","clearDepth","render","gizmoHelperContext","raycast","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","ref","makeDefault"],"sources":["/home/cliffexpc63/my example/portfolio/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 1,\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n\n  const tweenCamera = direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    invalidate();\n  };\n\n  const animateStep = delta => {\n    if (!animating.current) return;\n\n    if (q1.angleTo(q2) < 0.01) {\n      animating.current = false;\n      return;\n    }\n\n    const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n    q1.rotateTowards(q2, step); // animate orientation\n\n    mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n    mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n    mainCamera.quaternion.copy(q1);\n    if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n    invalidate();\n  };\n\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) {\n        scene.background = backgroundRef.current;\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const beforeRender = () => {\n    var _gizmoRef$current;\n\n    // Sync gizmo with main camera orientation\n    matrix.copy(mainCamera.matrix).invert();\n    (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix);\n  };\n\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      animateStep(delta);\n      beforeRender();\n      gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const gizmoHelperContext = {\n    tweenCamera,\n    raycast: useCamera(virtualCam)\n  }; // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    makeDefault: false,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}