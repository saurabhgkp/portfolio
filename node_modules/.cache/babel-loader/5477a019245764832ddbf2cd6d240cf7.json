{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    context,\n    children,\n    ...props\n  } = _ref;\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    children,\n    range,\n    limit = 1000,\n    frames = Infinity,\n    ...props\n  } = _ref2;\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: event => {\n        var _r3f, _r3f$handlers;\n\n        const object = instances[event.instanceId].current;\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({ ...event,\n          object\n        });\n      }\n    }), {});\n  }, [children, instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged(_ref3) {\n  let {\n    meshes,\n    children,\n    ...props\n  } = _ref3;\n  const isArray = Array.isArray(meshes);\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(_ref4 => {\n      let {\n        geometry,\n        material\n      } = _ref4;\n      return /*#__PURE__*/React.createElement(Instances, _extends({\n        geometry: geometry,\n        material: material\n      }, props));\n    })\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };","map":{"version":3,"names":["_extends","THREE","React","extend","useFrame","mergeRefs","Composer","Position","i","instanceRef","globalContext","createContext","parentMatrix","Matrix4","instanceMatrix","tempMatrix","color","Color","translation","Vector3","rotation","Quaternion","scale","Instance","forwardRef","ref","context","children","props","useMemo","group","useRef","subscribe","useContext","useLayoutEffect","createElement","Instances","range","limit","frames","Infinity","instance","useState","parentRef","instances","setInstances","matrices","colors","mArray","Float32Array","identity","toArray","Array","map","current","count","updateRange","instanceColor","Math","min","undefined","length","useEffect","needsUpdate","state","updateMatrix","updateMatrixWorld","copy","matrixWorld","invert","decompose","compose","premultiply","equals","fromArray","events","_instances$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","event","_r3f","_r3f$handlers","object","instanceId","api","filter","item","matrixAutoUpdate","args","attach","array","itemSize","usage","DynamicDrawUsage","Provider","value","Merged","meshes","isArray","components","values","geometry","material","acc"],"sources":["/home/cliffexpc63/my example/portfolioQ/node_modules/@react-three/drei/core/Instances.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { extend, useFrame } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport Composer from 'react-composer';\nimport { Position } from '../helpers/Position.js';\n\nlet i, instanceRef;\nconst globalContext = /*#__PURE__*/React.createContext(null);\nconst parentMatrix = new THREE.Matrix4();\nconst instanceMatrix = new THREE.Matrix4();\nconst tempMatrix = new THREE.Matrix4();\nconst color = new THREE.Color();\nconst translation = new THREE.Vector3();\nconst rotation = new THREE.Quaternion();\nconst scale = new THREE.Vector3();\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  context,\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context || globalContext);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nconst Instances = /*#__PURE__*/React.forwardRef(({\n  children,\n  range,\n  limit = 1000,\n  frames = Infinity,\n  ...props\n}, ref) => {\n  const [{\n    context,\n    instance\n  }] = React.useState(() => {\n    const context = /*#__PURE__*/React.createContext(null);\n    return {\n      context,\n      instance: /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/React.createElement(Instance, _extends({\n        context: context\n      }, props, {\n        ref: ref\n      })))\n    };\n  });\n  const parentRef = React.useRef(null);\n  const [instances, setInstances] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const mArray = new Float32Array(limit * 16);\n\n    for (i = 0; i < limit; i++) tempMatrix.identity().toArray(mArray, i * 16);\n\n    return [mArray, new Float32Array([...new Array(limit * 3)].map(() => 1))];\n  });\n  React.useLayoutEffect(() => {\n    parentRef.current.count = parentRef.current.instanceMatrix.updateRange.count = parentRef.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, instances.length);\n  }, [instances, range]);\n  React.useEffect(() => {\n    // We might be a frame too late? 🤷‍♂️\n    parentRef.current.instanceMatrix.needsUpdate = true;\n  });\n  let count = 0;\n  useFrame(state => {\n    if (frames === Infinity || count < frames) {\n      parentRef.current.updateMatrix();\n      parentRef.current.updateMatrixWorld();\n      parentMatrix.copy(parentRef.current.matrixWorld).invert();\n\n      for (i = 0; i < instances.length; i++) {\n        instanceRef = instances[i].current; // Multiply the inverse of the InstancedMesh world matrix or else\n        // Instances will be double-transformed if <Instances> isn't at identity\n\n        instanceRef.matrixWorld.decompose(translation, rotation, scale);\n        instanceMatrix.compose(translation, rotation, scale).premultiply(parentMatrix);\n\n        if (!instanceMatrix.equals(tempMatrix.fromArray(matrices, i * 16))) {\n          instanceMatrix.toArray(matrices, i * 16);\n          parentRef.current.instanceMatrix.needsUpdate = true;\n        }\n\n        if (!instanceRef.color.equals(color.fromArray(colors, i * 3))) {\n          instanceRef.color.toArray(colors, i * 3);\n          parentRef.current.instanceColor.needsUpdate = true;\n        }\n      }\n\n      count++;\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < instances.length; i++) {\n      var _instances$i$current;\n\n      Object.assign(events, (_instances$i$current = instances[i].current) == null ? void 0 : _instances$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: event => {\n        var _r3f, _r3f$handlers;\n\n        const object = instances[event.instanceId].current;\n        return object == null ? void 0 : (_r3f = object.__r3f) == null ? void 0 : (_r3f$handlers = _r3f.handlers) == null ? void 0 : _r3f$handlers[key]({ ...event,\n          object\n        });\n      }\n    }), {});\n  }, [children, instances]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setInstances(instances => [...instances, ref]);\n      return () => setInstances(instances => instances.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, parentRef]),\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16,\n    usage: THREE.DynamicDrawUsage\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3,\n    usage: THREE.DynamicDrawUsage\n  }), typeof children === 'function' ? /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children(instance)) : /*#__PURE__*/React.createElement(globalContext.Provider, {\n    value: api\n  }, children));\n});\n\nfunction Merged({\n  meshes,\n  children,\n  ...props\n}) {\n  const isArray = Array.isArray(meshes);\n  return /*#__PURE__*/React.createElement(Composer, {\n    components: (isArray ? meshes : Object.values(meshes)).map(({\n      geometry,\n      material\n    }) => /*#__PURE__*/React.createElement(Instances, _extends({\n      geometry: geometry,\n      material: material\n    }, props)))\n  }, args => isArray ? children(...args) : children(Object.keys(meshes).reduce((acc, key, i) => ({ ...acc,\n    [key]: args[i]\n  }), {})));\n}\n\nexport { Instance, Instances, Merged };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}