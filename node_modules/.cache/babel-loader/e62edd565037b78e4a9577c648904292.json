{"ast":null,"code":"import _defineProperty from \"/home/cliffexpc63/my example/portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { TextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nvar IsObject = function IsObject(url) {\n  return url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\n};\n\nfunction useTexture(input) {\n  var textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n\n  if (IsObject(input)) {\n    var keys = Object.keys(input);\n    var keyed = {};\n    keys.forEach(function (key) {\n      return Object.assign(keyed, _defineProperty({}, key, textures[keys.indexOf(key)]));\n    });\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = function (url) {\n  return useLoader.preload(TextureLoader, url);\n}; // @ts-expect-error new in r3f 7.0.5\n\n\nuseTexture.clear = function (input) {\n  return useLoader.clear(TextureLoader, input);\n};\n\nexport { IsObject, useTexture };","map":{"version":3,"names":["TextureLoader","useLoader","IsObject","url","Object","Array","isArray","useTexture","input","textures","values","keys","keyed","forEach","key","assign","indexOf","preload","clear"],"sources":["/home/cliffexpc63/my example/portfolio/node_modules/@react-three/drei/core/useTexture.js"],"sourcesContent":["import { TextureLoader } from 'three';\nimport { useLoader } from '@react-three/fiber';\n\nconst IsObject = url => url === Object(url) && !Array.isArray(url) && typeof url !== 'function';\nfunction useTexture(input) {\n  const textures = useLoader(TextureLoader, IsObject(input) ? Object.values(input) : input);\n\n  if (IsObject(input)) {\n    const keys = Object.keys(input);\n    const keyed = {};\n    keys.forEach(key => Object.assign(keyed, {\n      [key]: textures[keys.indexOf(key)]\n    }));\n    return keyed;\n  } else {\n    return textures;\n  }\n}\n\nuseTexture.preload = url => useLoader.preload(TextureLoader, url); // @ts-expect-error new in r3f 7.0.5\n\n\nuseTexture.clear = input => useLoader.clear(TextureLoader, input);\n\nexport { IsObject, useTexture };\n"],"mappings":";AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG;EAAA,OAAIA,GAAG,KAAKC,MAAM,CAACD,GAAD,CAAd,IAAuB,CAACE,KAAK,CAACC,OAAN,CAAcH,GAAd,CAAxB,IAA8C,OAAOA,GAAP,KAAe,UAAjE;AAAA,CAApB;;AACA,SAASI,UAAT,CAAoBC,KAApB,EAA2B;EACzB,IAAMC,QAAQ,GAAGR,SAAS,CAACD,aAAD,EAAgBE,QAAQ,CAACM,KAAD,CAAR,GAAkBJ,MAAM,CAACM,MAAP,CAAcF,KAAd,CAAlB,GAAyCA,KAAzD,CAA1B;;EAEA,IAAIN,QAAQ,CAACM,KAAD,CAAZ,EAAqB;IACnB,IAAMG,IAAI,GAAGP,MAAM,CAACO,IAAP,CAAYH,KAAZ,CAAb;IACA,IAAMI,KAAK,GAAG,EAAd;IACAD,IAAI,CAACE,OAAL,CAAa,UAAAC,GAAG;MAAA,OAAIV,MAAM,CAACW,MAAP,CAAcH,KAAd,sBACjBE,GADiB,EACXL,QAAQ,CAACE,IAAI,CAACK,OAAL,CAAaF,GAAb,CAAD,CADG,EAAJ;IAAA,CAAhB;IAGA,OAAOF,KAAP;EACD,CAPD,MAOO;IACL,OAAOH,QAAP;EACD;AACF;;AAEDF,UAAU,CAACU,OAAX,GAAqB,UAAAd,GAAG;EAAA,OAAIF,SAAS,CAACgB,OAAV,CAAkBjB,aAAlB,EAAiCG,GAAjC,CAAJ;AAAA,CAAxB,C,CAAmE;;;AAGnEI,UAAU,CAACW,KAAX,GAAmB,UAAAV,KAAK;EAAA,OAAIP,SAAS,CAACiB,KAAV,CAAgBlB,aAAhB,EAA+BQ,KAA/B,CAAJ;AAAA,CAAxB;;AAEA,SAASN,QAAT,EAAmBK,UAAnB"},"metadata":{},"sourceType":"module"}