{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\nconst CameraShake = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    intensity = 1,\n    decay,\n    decayRate = 0.65,\n    maxYaw = 0.1,\n    maxPitch = 0.1,\n    maxRoll = 0.1,\n    yawFrequency = 1,\n    pitchFrequency = 1,\n    rollFrequency = 1,\n    controls\n  } = _ref;\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    const currControls = defaultControls || (controls == null ? void 0 : controls.current);\n\n    const callback = () => void (initialRotation.current = camera.rotation.clone());\n\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return () => void (currControls == null ? void 0 : currControls.removeEventListener('change', callback)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controls, defaultControls]);\n  useFrame((_ref2, delta) => {\n    let {\n      clock\n    } = _ref2;\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\nexport { CameraShake };","map":{"version":3,"names":["React","useThree","useFrame","SimplexNoise","CameraShake","forwardRef","ref","intensity","decay","decayRate","maxYaw","maxPitch","maxRoll","yawFrequency","pitchFrequency","rollFrequency","controls","camera","state","defaultControls","intensityRef","useRef","initialRotation","rotation","clone","yawNoise","useState","pitchNoise","rollNoise","constrainIntensity","current","useImperativeHandle","getIntensity","setIntensity","val","useEffect","currControls","callback","addEventListener","removeEventListener","delta","clock","shake","Math","pow","yaw","noise","elapsedTime","pitch","roll","set","x","y","z"],"sources":["/home/cliffexpc63/my example/portfolio/node_modules/@react-three/drei/core/CameraShake.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { SimplexNoise } from 'three-stdlib';\n\nconst CameraShake = /*#__PURE__*/React.forwardRef(({\n  intensity = 1,\n  decay,\n  decayRate = 0.65,\n  maxYaw = 0.1,\n  maxPitch = 0.1,\n  maxRoll = 0.1,\n  yawFrequency = 1,\n  pitchFrequency = 1,\n  rollFrequency = 1,\n  controls\n}, ref) => {\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(state => state.controls);\n  const intensityRef = React.useRef(intensity);\n  const initialRotation = React.useRef(camera.rotation.clone());\n  const [yawNoise] = React.useState(() => new SimplexNoise());\n  const [pitchNoise] = React.useState(() => new SimplexNoise());\n  const [rollNoise] = React.useState(() => new SimplexNoise());\n\n  const constrainIntensity = () => {\n    if (intensityRef.current < 0 || intensityRef.current > 1) {\n      intensityRef.current = intensityRef.current < 0 ? 0 : 1;\n    }\n  };\n\n  React.useImperativeHandle(ref, () => ({\n    getIntensity: () => intensityRef.current,\n    setIntensity: val => {\n      intensityRef.current = val;\n      constrainIntensity();\n    }\n  }), []);\n  React.useEffect(() => {\n    const currControls = defaultControls || (controls == null ? void 0 : controls.current);\n\n    const callback = () => void (initialRotation.current = camera.rotation.clone());\n\n    currControls == null ? void 0 : currControls.addEventListener('change', callback);\n    return () => void (currControls == null ? void 0 : currControls.removeEventListener('change', callback)); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controls, defaultControls]);\n  useFrame(({\n    clock\n  }, delta) => {\n    const shake = Math.pow(intensityRef.current, 2);\n    const yaw = maxYaw * shake * yawNoise.noise(clock.elapsedTime * yawFrequency, 1);\n    const pitch = maxPitch * shake * pitchNoise.noise(clock.elapsedTime * pitchFrequency, 1);\n    const roll = maxRoll * shake * rollNoise.noise(clock.elapsedTime * rollFrequency, 1);\n    camera.rotation.set(initialRotation.current.x + pitch, initialRotation.current.y + yaw, initialRotation.current.z + roll);\n\n    if (decay && intensityRef.current > 0) {\n      intensityRef.current -= decayRate * delta;\n      constrainIntensity();\n    }\n  });\n  return null;\n});\n\nexport { CameraShake };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}