{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContentAssist = void 0;\nvar interpreter_1 = require(\"../../grammar/interpreter\");\nvar utils_1 = require(\"@chevrotain/utils\");\nvar ContentAssist = /** @class */function () {\n  function ContentAssist() {}\n  ContentAssist.prototype.initContentAssist = function () {};\n  ContentAssist.prototype.computeContentAssist = function (startRuleName, precedingInput) {\n    var startRuleGast = this.gastProductionsCache[startRuleName];\n    if (utils_1.isUndefined(startRuleGast)) {\n      throw Error(\"Rule ->\" + startRuleName + \"<- does not exist in this grammar.\");\n    }\n    return interpreter_1.nextPossibleTokensAfter([startRuleGast], precedingInput, this.tokenMatcher, this.maxLookahead);\n  };\n  // TODO: should this be a member method or a utility? it does not have any state or usage of 'this'...\n  // TODO: should this be more explicitly part of the public API?\n  ContentAssist.prototype.getNextPossibleTokenTypes = function (grammarPath) {\n    var topRuleName = utils_1.first(grammarPath.ruleStack);\n    var gastProductions = this.getGAstProductions();\n    var topProduction = gastProductions[topRuleName];\n    var nextPossibleTokenTypes = new interpreter_1.NextAfterTokenWalker(topProduction, grammarPath).startWalking();\n    return nextPossibleTokenTypes;\n  };\n  return ContentAssist;\n}();\nexports.ContentAssist = ContentAssist;","map":null,"metadata":{},"sourceType":"script"}