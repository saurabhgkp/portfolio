{"ast":null,"code":"import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const current = useThree(state => state.performance.current);\n  React.useEffect(() => {\n    const enabled = get().raycaster.enabled;\n    return () => void (get().raycaster.enabled = enabled); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  React.useEffect(() => void (get().raycaster.enabled = current === 1), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };","map":{"version":3,"names":["React","useThree","AdaptiveEvents","get","state","current","performance","useEffect","enabled","raycaster"],"sources":["/home/cliffexpc63/my example/portfolioQ/node_modules/@react-three/drei/core/AdaptiveEvents.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const current = useThree(state => state.performance.current);\n  React.useEffect(() => {\n    const enabled = get().raycaster.enabled;\n    return () => void (get().raycaster.enabled = enabled); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  React.useEffect(() => void (get().raycaster.enabled = current === 1), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,cAAT,GAA0B;EACxB,MAAMC,GAAG,GAAGF,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACD,GAAhB,CAApB;EACA,MAAME,OAAO,GAAGJ,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACE,WAAN,CAAkBD,OAA5B,CAAxB;EACAL,KAAK,CAACO,SAAN,CAAgB,MAAM;IACpB,MAAMC,OAAO,GAAGL,GAAG,GAAGM,SAAN,CAAgBD,OAAhC;IACA,OAAO,MAAM,MAAML,GAAG,GAAGM,SAAN,CAAgBD,OAAhB,GAA0BA,OAAhC,CAAb,CAFoB,CAEmC;EACxD,CAHD,EAGG,EAHH,EAHwB,CAMhB;;EAERR,KAAK,CAACO,SAAN,CAAgB,MAAM,MAAMJ,GAAG,GAAGM,SAAN,CAAgBD,OAAhB,GAA0BH,OAAO,KAAK,CAA5C,CAAtB,EAAsE,CAACA,OAAD,CAAtE;EACA,OAAO,IAAP;AACD;;AAED,SAASH,cAAT"},"metadata":{},"sourceType":"module"}