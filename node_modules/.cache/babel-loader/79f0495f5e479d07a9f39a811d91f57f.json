{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nfunction SubSlotNode(slots) {\n  TempNode.call(this);\n  this.slots = slots || {};\n}\nSubSlotNode.prototype = Object.create(TempNode.prototype);\nSubSlotNode.prototype.constructor = SubSlotNode;\nSubSlotNode.prototype.nodeType = 'SubSlot';\nSubSlotNode.prototype.getType = function (builder, output) {\n  return output;\n};\nSubSlotNode.prototype.generate = function (builder, output) {\n  if (this.slots[builder.slot]) {\n    return this.slots[builder.slot].build(builder, output);\n  }\n  return builder.format('0.0', 'f', output);\n};\nSubSlotNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  for (var prop in source.slots) {\n    this.slots[prop] = source.slots[prop];\n  }\n  return this;\n};\nSubSlotNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.slots = {};\n    for (var prop in this.slots) {\n      var slot = this.slots[prop];\n      if (slot) {\n        data.slots[prop] = slot.toJSON(meta).uuid;\n      }\n    }\n  }\n  return data;\n};\nexport { SubSlotNode };","map":null,"metadata":{},"sourceType":"module"}