{"ast":null,"code":"import { UniformsUtils, ShaderMaterial, WebGLRenderTarget, LinearFilter, RGBFormat } from 'three';\nimport { FullScreenQuad, Pass } from './Pass.js';\nimport { CopyShader } from '../shaders/CopyShader.js';\nvar SavePass = function SavePass(renderTarget) {\n  if (CopyShader === undefined) console.error('THREE.SavePass relies on CopyShader');\n  var shader = CopyShader;\n  this.textureID = 'tDiffuse';\n  this.uniforms = UniformsUtils.clone(shader.uniforms);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    vertexShader: shader.vertexShader,\n    fragmentShader: shader.fragmentShader\n  });\n  this.renderTarget = renderTarget;\n  if (this.renderTarget === undefined) {\n    this.renderTarget = new WebGLRenderTarget(window.innerWidth, window.innerHeight, {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBFormat\n    });\n    this.renderTarget.texture.name = 'SavePass.rt';\n  }\n  this.needsSwap = false;\n  this.fsQuad = new FullScreenQuad(this.material);\n};\nSavePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: SavePass,\n  render: function render(renderer, writeBuffer, readBuffer) {\n    if (this.uniforms[this.textureID]) {\n      this.uniforms[this.textureID].value = readBuffer.texture;\n    }\n    renderer.setRenderTarget(this.renderTarget);\n    if (this.clear) renderer.clear();\n    this.fsQuad.render(renderer);\n  }\n});\nexport { SavePass };","map":null,"metadata":{},"sourceType":"module"}