{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\nfunction UVNode(index) {\n  TempNode.call(this, 'v2', {\n    shared: false\n  });\n  this.index = index || 0;\n}\nUVNode.prototype = Object.create(TempNode.prototype);\nUVNode.prototype.constructor = UVNode;\nUVNode.prototype.nodeType = 'UV';\nUVNode.prototype.generate = function (builder, output) {\n  builder.requires.uv[this.index] = true;\n  var uvIndex = this.index > 0 ? this.index + 1 : '';\n  var result = builder.isShader('vertex') ? 'uv' + uvIndex : 'vUv' + uvIndex;\n  return builder.format(result, this.getType(builder), output);\n};\nUVNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.index = source.index;\n  return this;\n};\nUVNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.index = this.index;\n  }\n  return data;\n};\nNodeLib.addKeyword('uv', function () {\n  return new UVNode();\n});\nNodeLib.addKeyword('uv2', function () {\n  return new UVNode(1);\n});\nexport { UVNode };","map":null,"metadata":{},"sourceType":"module"}