{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GastRecorder = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar gast_public_1 = require(\"../../grammar/gast/gast_public\");\n\nvar lexer_public_1 = require(\"../../../scan/lexer_public\");\n\nvar tokens_1 = require(\"../../../scan/tokens\");\n\nvar tokens_public_1 = require(\"../../../scan/tokens_public\");\n\nvar parser_1 = require(\"../parser\");\n\nvar keys_1 = require(\"../../grammar/keys\");\n\nvar RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\"\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nvar HANDLE_SEPARATOR = true;\nvar MAX_METHOD_IDX = Math.pow(2, keys_1.BITS_FOR_OCCURRENCE_IDX) - 1;\nvar RFT = tokens_public_1.createToken({\n  name: \"RECORDING_PHASE_TOKEN\",\n  pattern: lexer_public_1.Lexer.NA\n});\ntokens_1.augmentTokenTypes([RFT]);\nvar RECORDING_PHASE_TOKEN = tokens_public_1.createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" + \"\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\", // Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nvar RECORDING_PHASE_CSTNODE = {\n  name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {}\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\n\nvar GastRecorder =\n/** @class */\nfunction () {\n  function GastRecorder() {}\n\n  GastRecorder.prototype.initGastRecorder = function (config) {\n    this.recordingProdStack = [];\n    this.RECORDING_PHASE = false;\n  };\n\n  GastRecorder.prototype.enableRecording = function () {\n    var _this = this;\n\n    this.RECORDING_PHASE = true;\n    this.TRACE_INIT(\"Enable Recording\", function () {\n      var _loop_1 = function (i) {\n        var idx = i > 0 ? i : \"\";\n\n        _this[\"CONSUME\" + idx] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2);\n        };\n\n        _this[\"SUBRULE\" + idx] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2);\n        };\n\n        _this[\"OPTION\" + idx] = function (arg1) {\n          return this.optionInternalRecord(arg1, i);\n        };\n\n        _this[\"OR\" + idx] = function (arg1) {\n          return this.orInternalRecord(arg1, i);\n        };\n\n        _this[\"MANY\" + idx] = function (arg1) {\n          this.manyInternalRecord(i, arg1);\n        };\n\n        _this[\"MANY_SEP\" + idx] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1);\n        };\n\n        _this[\"AT_LEAST_ONE\" + idx] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1);\n        };\n\n        _this[\"AT_LEAST_ONE_SEP\" + idx] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1);\n        };\n      };\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n\n\n      for (var i = 0; i < 10; i++) {\n        _loop_1(i);\n      } // DSL methods with the idx(suffix) as an argument\n\n\n      _this[\"consume\"] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2);\n      };\n\n      _this[\"subrule\"] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2);\n      };\n\n      _this[\"option\"] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx);\n      };\n\n      _this[\"or\"] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx);\n      };\n\n      _this[\"many\"] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1);\n      };\n\n      _this[\"atLeastOne\"] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1);\n      };\n\n      _this.ACTION = _this.ACTION_RECORD;\n      _this.BACKTRACK = _this.BACKTRACK_RECORD;\n      _this.LA = _this.LA_RECORD;\n    });\n  };\n\n  GastRecorder.prototype.disableRecording = function () {\n    var _this = this;\n\n    this.RECORDING_PHASE = false; // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n\n    this.TRACE_INIT(\"Deleting Recording methods\", function () {\n      for (var i = 0; i < 10; i++) {\n        var idx = i > 0 ? i : \"\";\n        delete _this[\"CONSUME\" + idx];\n        delete _this[\"SUBRULE\" + idx];\n        delete _this[\"OPTION\" + idx];\n        delete _this[\"OR\" + idx];\n        delete _this[\"MANY\" + idx];\n        delete _this[\"MANY_SEP\" + idx];\n        delete _this[\"AT_LEAST_ONE\" + idx];\n        delete _this[\"AT_LEAST_ONE_SEP\" + idx];\n      }\n\n      delete _this[\"consume\"];\n      delete _this[\"subrule\"];\n      delete _this[\"option\"];\n      delete _this[\"or\"];\n      delete _this[\"many\"];\n      delete _this[\"atLeastOne\"];\n      delete _this.ACTION;\n      delete _this.BACKTRACK;\n      delete _this.LA;\n    });\n  }; // TODO: is there any way to use this method to check no\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n\n\n  GastRecorder.prototype.ACTION_RECORD = function (impl) {\n    // NO-OP during recording\n    return;\n  }; // Executing backtracking logic will break our recording logic assumptions\n\n\n  GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {\n    return function () {\n      return true;\n    };\n  }; // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n\n\n  GastRecorder.prototype.LA_RECORD = function (howMuch) {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return parser_1.END_OF_FILE;\n  };\n\n  GastRecorder.prototype.topLevelRuleRecord = function (name, def) {\n    try {\n      var newTopLevelRule = new gast_public_1.Rule({\n        definition: [],\n        name: name\n      });\n      newTopLevelRule.name = name;\n      this.recordingProdStack.push(newTopLevelRule);\n      def.call(this);\n      this.recordingProdStack.pop();\n      return newTopLevelRule;\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message = originalError.message + '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' + \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError;\n        }\n      }\n\n      throw originalError;\n    }\n  }; // Implementation of parsing DSL\n\n\n  GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {\n    return recordProd.call(this, gast_public_1.Option, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, gast_public_1.RepetitionMandatory, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, gast_public_1.RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n\n  GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, gast_public_1.Repetition, actionORMethodDef, occurrence);\n  };\n\n  GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, gast_public_1.RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n\n  GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {\n    return recordOrProd.call(this, altsOrOpts, occurrence);\n  };\n\n  GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n\n    if (!ruleToCall || utils_1.has(ruleToCall, \"ruleName\") === false) {\n      var error = new Error(\"<SUBRULE\" + getIdxSuffix(occurrence) + \"> argument is invalid\" + (\" expecting a Parser method reference but got: <\" + JSON.stringify(ruleToCall) + \">\") + (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    var prevProd = utils_1.peek(this.recordingProdStack);\n    var ruleName = ruleToCall[\"ruleName\"];\n    var newNoneTerminal = new gast_public_1.NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      label: options === null || options === void 0 ? void 0 : options.LABEL,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return this.outputCst ? RECORDING_PHASE_CSTNODE : RECORDING_NULL_OBJECT;\n  };\n\n  GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n\n    if (!tokens_1.hasShortKeyProperty(tokType)) {\n      var error = new Error(\"<CONSUME\" + getIdxSuffix(occurrence) + \"> argument is invalid\" + (\" expecting a TokenType reference but got: <\" + JSON.stringify(tokType) + \">\") + (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n\n    var prevProd = utils_1.peek(this.recordingProdStack);\n    var newNoneTerminal = new gast_public_1.Terminal({\n      idx: occurrence,\n      terminalType: tokType,\n      label: options === null || options === void 0 ? void 0 : options.LABEL\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return RECORDING_PHASE_TOKEN;\n  };\n\n  return GastRecorder;\n}();\n\nexports.GastRecorder = GastRecorder;\n\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {\n  if (handleSep === void 0) {\n    handleSep = false;\n  }\n\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = utils_1.peek(this.recordingProdStack);\n  var grammarAction = utils_1.isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n  var newProd = new prodConstructor({\n    definition: [],\n    idx: occurrence\n  });\n\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP;\n  }\n\n  if (utils_1.has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  this.recordingProdStack.push(newProd);\n  grammarAction.call(this);\n  prevProd.definition.push(newProd);\n  this.recordingProdStack.pop();\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction recordOrProd(mainProdArg, occurrence) {\n  var _this = this;\n\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = utils_1.peek(this.recordingProdStack); // Only an array of alternatives\n\n  var hasOptions = utils_1.isArray(mainProdArg) === false;\n  var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n  var newOrProd = new gast_public_1.Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n  });\n\n  if (utils_1.has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n\n  var hasPredicates = utils_1.some(alts, function (currAlt) {\n    return utils_1.isFunction(currAlt.GATE);\n  });\n  newOrProd.hasPredicates = hasPredicates;\n  prevProd.definition.push(newOrProd);\n  utils_1.forEach(alts, function (currAlt) {\n    var currAltFlat = new gast_public_1.Alternative({\n      definition: []\n    });\n    newOrProd.definition.push(currAltFlat);\n\n    if (utils_1.has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES;\n    } // **implicit** ignoreAmbiguities due to usage of gate\n    else if (utils_1.has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true;\n    }\n\n    _this.recordingProdStack.push(currAltFlat);\n\n    currAlt.ALT.call(_this);\n\n    _this.recordingProdStack.pop();\n  });\n  return RECORDING_NULL_OBJECT;\n}\n\nfunction getIdxSuffix(idx) {\n  return idx === 0 ? \"\" : \"\" + idx;\n}\n\nfunction assertMethodIdxIsValid(idx) {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    var error = new Error( // The stack trace will contain all the needed details\n    \"Invalid DSL Method idx value: <\" + idx + \">\\n\\t\" + (\"Idx value must be a none negative value smaller than \" + (MAX_METHOD_IDX + 1)));\n    error.KNOWN_RECORDER_ERROR = true;\n    throw error;\n  }\n}","map":{"version":3,"mappings":"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","names":["RECORDING_NULL_OBJECT","description","Object","freeze","HANDLE_SEPARATOR","MAX_METHOD_IDX","Math","pow","keys_1","RFT","tokens_public_1","name","pattern","lexer_public_1","NA","tokens_1","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","children","GastRecorder","config","recordingProdStack","RECORDING_PHASE","TRACE_INIT","i","idx","_this","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION","ACTION_RECORD","BACKTRACK","BACKTRACK_RECORD","LA","LA_RECORD","impl","grammarRule","args","howMuch","parser_1","def","newTopLevelRule","gast_public_1","definition","push","call","pop","originalError","KNOWN_RECORDER_ERROR","message","mutabilityError","actionORMethodDef","occurrence","recordProd","options","altsOrOpts","recordOrProd","ruleToCall","assertMethodIdxIsValid","utils_1","error","Error","getIdxSuffix","JSON","stringify","prevProd","ruleName","newNoneTerminal","nonTerminalName","label","LABEL","referencedRule","undefined","outputCst","tokType","terminalType","exports","prodConstructor","mainProdArg","handleSep","grammarAction","DEF","newProd","separator","SEP","maxLookahead","MAX_LOOKAHEAD","hasOptions","alts","newOrProd","ignoreAmbiguities","IGNORE_AMBIGUITIES","hasPredicates","currAlt","GATE","currAltFlat","ALT"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/gast_recorder.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}