{"ast":null,"code":"import { Vector2 } from 'three';\nimport { InputNode } from '../core/InputNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\nfunction Vector2Node(x, y) {\n  InputNode.call(this, 'v2');\n  this.value = x instanceof Vector2 ? x : new Vector2(x, y);\n}\nVector2Node.prototype = Object.create(InputNode.prototype);\nVector2Node.prototype.constructor = Vector2Node;\nVector2Node.prototype.nodeType = 'Vector2';\nNodeUtils.addShortcuts(Vector2Node.prototype, 'value', ['x', 'y']);\nVector2Node.prototype.generateReadonly = function (builder, output, uuid, type\n/*, ns, needsUpdate*/) {\n  return builder.format('vec2( ' + this.x + ', ' + this.y + ' )', type, output);\n};\nVector2Node.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.value.copy(source);\n  return this;\n};\nVector2Node.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.x = this.x;\n    data.y = this.y;\n    if (this.readonly === true) data.readonly = true;\n  }\n  return data;\n};\nexport { Vector2Node };","map":null,"metadata":{},"sourceType":"module"}