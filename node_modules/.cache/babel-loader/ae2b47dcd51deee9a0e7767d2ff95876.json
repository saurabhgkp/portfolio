{"ast":null,"code":"var _jsxFileName = \"/home/cliffexpc63/my example/portfolio/src/components/Wave.js\",\n    _s = $RefreshSig$();\n\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { extend, useFrame, useLoader } from 'react-three-fiber';\nimport circleImg from '../assets/circle.png';\nimport { useCallback, useMemo, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  OrbitControls\n});\n\nfunction Points() {\n  _s();\n\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const bufferRef = useRef();\n  let t = 0;\n  let f = 0.002;\n  let a = 3;\n  const graph = useCallback((x, z) => {\n    return Math.sin(f * (x ** 2 + t)) * Math.sin(f * (z ** 2 + t)) * a;\n  }, [t, f, a]);\n  const count = 100;\n  const sep = 3;\n  let positions = useMemo(() => {\n    let positions = [];\n\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        let x = sep * (xi - count / 2);\n        let z = sep * (zi - count / 2);\n        let y = graph(x, z);\n        positions.push(x, y, z);\n      }\n    }\n\n    return new Float32Array(positions);\n  }, [count, sep, graph]);\n  useFrame(() => {\n    t += 15;\n    const positions = bufferRef.current.array;\n    let i = 0;\n\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        let x = sep * (xi - count / 2);\n        let z = sep * (zi - count / 2);\n        positions[i + 1] = graph(x, z);\n        i += 3;\n      }\n    }\n\n    bufferRef.current.needsUpdate = true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"points\", {\n    children: [/*#__PURE__*/_jsxDEV(\"bufferGeometry\", {\n      attach: \"geometry\",\n      children: /*#__PURE__*/_jsxDEV(\"bufferAttribute\", {\n        attach: \"geometry\",\n        args: [10, 10],\n        ref: bufferRef,\n        attachObject: ['attributes', 'position'],\n        array: positions,\n        count: positions.length / 3,\n        itemSize: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pointsMaterial\", {\n      attach: \"material\",\n      map: imgTex,\n      color: 0x00AAFF,\n      size: 0.5,\n      sizeAttenuation: true,\n      transparent: false,\n      alphaTest: 0.5,\n      opacity: 1.0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Points, \"ZFKK6XaFpefMvNhgNO6lHhsFqmc=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = Points;\n\nfunction Wave() {\n  return /*#__PURE__*/_jsxDEV(Points, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 17\n  }, this);\n}\n\n_c2 = Wave;\nexport default Wave;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Points\");\n$RefreshReg$(_c2, \"Wave\");","map":{"version":3,"names":["THREE","OrbitControls","extend","useFrame","useLoader","circleImg","useCallback","useMemo","useRef","Points","imgTex","TextureLoader","bufferRef","t","f","a","graph","x","z","Math","sin","count","sep","positions","xi","zi","y","push","Float32Array","current","array","i","needsUpdate","length","Wave"],"sources":["/home/cliffexpc63/my example/portfolio/src/components/Wave.js"],"sourcesContent":["import * as THREE from 'three';\nimport {OrbitControls} from 'three/examples/jsm/controls/OrbitControls';\nimport {  extend, useFrame, useLoader } from 'react-three-fiber';\nimport circleImg from '../assets/circle.png';\nimport { useCallback, useMemo, useRef } from 'react';\nextend({OrbitControls})\n\nfunction Points() {\n  const imgTex = useLoader(THREE.TextureLoader, circleImg);\n  const bufferRef = useRef();\n\n  let t = 0;\n  let f = 0.002;\n  let a = 3;\n  const graph = useCallback((x, z) => {\n    return Math.sin(f * (x ** 2 + t) )*Math.sin(f * (z ** 2 + t) ) * a; \n  }, [t, f, a])\n\n  const count = 100\n  const sep = 3\n  let positions = useMemo(() => {\n    let positions = []\n\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        let x = sep * (xi - count / 2);\n        let z = sep * (zi - count / 2);\n        let y = graph(x, z);\n        positions.push(x, y, z);\n      }\n    }\n\n    return new Float32Array(positions);\n  }, [count, sep, graph])\n\n  useFrame(() => {\n    t += 15\n    \n    const positions = bufferRef.current.array;\n\n    let i = 0;\n    for (let xi = 0; xi < count; xi++) {\n      for (let zi = 0; zi < count; zi++) {\n        let x = sep * (xi - count / 2);\n        let z = sep * (zi - count / 2);\n\n        positions[i + 1] = graph(x, z);\n        i += 3;\n      }\n    }\n\n    bufferRef.current.needsUpdate = true;\n  })\n\n  return (\n    <points>\n      <bufferGeometry attach=\"geometry\">\n        <bufferAttribute\n        attach=\"geometry\" args={[10, 10]} \n          ref={bufferRef}\n          attachObject={['attributes', 'position']}\n          array={positions}\n          count={positions.length / 3}\n          itemSize={3}\n        />\n      </bufferGeometry>\n\n      <pointsMaterial\n        attach=\"material\"\n        map={imgTex}\n        color={0x00AAFF}\n        size={0.5}\n        sizeAttenuation\n        transparent={false}\n        alphaTest={0.5}\n        opacity={1.0}\n      />\n    </points>\n  );\n}\n\nfunction Wave() {\n  return (   \n                <Points />\n          \n  );\n}\n\n\n\n\n\nexport default Wave;"],"mappings":"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"},"metadata":{},"sourceType":"module"}