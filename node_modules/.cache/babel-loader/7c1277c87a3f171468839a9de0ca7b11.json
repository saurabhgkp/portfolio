{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateRedundantMethods = exports.validateMissingCstMethods = exports.validateVisitor = exports.CstVisitorDefinitionError = exports.createBaseVisitorConstructorWithDefaults = exports.createBaseSemanticVisitorConstructor = exports.defaultVisit = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar lang_extensions_1 = require(\"../../lang/lang_extensions\");\n\nfunction defaultVisit(ctx, param) {\n  var childrenNames = utils_1.keys(ctx);\n  var childrenNamesLength = childrenNames.length;\n\n  for (var i = 0; i < childrenNamesLength; i++) {\n    var currChildName = childrenNames[i];\n    var currChildArray = ctx[currChildName];\n    var currChildArrayLength = currChildArray.length;\n\n    for (var j = 0; j < currChildArrayLength; j++) {\n      var currChild = currChildArray[j]; // distinction between Tokens Children and CstNode children\n\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param);\n      }\n    }\n  } // defaultVisit does not support generic out param\n\n\n  return undefined;\n}\n\nexports.defaultVisit = defaultVisit;\n\nfunction createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n  var derivedConstructor = function () {}; // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n\n\n  lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n  var semanticProto = {\n    visit: function (cstNode, param) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (utils_1.isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0];\n      } // enables passing optional CstNodes concisely.\n\n\n      if (utils_1.isUndefined(cstNode)) {\n        return undefined;\n      }\n\n      return this[cstNode.name](cstNode.children, param);\n    },\n    validateVisitor: function () {\n      var semanticDefinitionErrors = validateVisitor(this, ruleNames);\n\n      if (!utils_1.isEmpty(semanticDefinitionErrors)) {\n        var errorMessages = utils_1.map(semanticDefinitionErrors, function (currDefError) {\n          return currDefError.msg;\n        });\n        throw Error(\"Errors Detected in CST Visitor <\" + lang_extensions_1.functionName(this.constructor) + \">:\\n\\t\" + (\"\" + errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")));\n      }\n    }\n  };\n  derivedConstructor.prototype = semanticProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n  derivedConstructor._RULE_NAMES = ruleNames;\n  return derivedConstructor;\n}\n\nexports.createBaseSemanticVisitorConstructor = createBaseSemanticVisitorConstructor;\n\nfunction createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n  var derivedConstructor = function () {}; // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n\n\n  lang_extensions_1.defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n  var withDefaultsProto = Object.create(baseConstructor.prototype);\n  utils_1.forEach(ruleNames, function (ruleName) {\n    withDefaultsProto[ruleName] = defaultVisit;\n  });\n  derivedConstructor.prototype = withDefaultsProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n  return derivedConstructor;\n}\n\nexports.createBaseVisitorConstructorWithDefaults = createBaseVisitorConstructorWithDefaults;\nvar CstVisitorDefinitionError;\n\n(function (CstVisitorDefinitionError) {\n  CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n  CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError = exports.CstVisitorDefinitionError || (exports.CstVisitorDefinitionError = {}));\n\nfunction validateVisitor(visitorInstance, ruleNames) {\n  var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n  var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);\n  return missingErrors.concat(redundantErrors);\n}\n\nexports.validateVisitor = validateVisitor;\n\nfunction validateMissingCstMethods(visitorInstance, ruleNames) {\n  var errors = utils_1.map(ruleNames, function (currRuleName) {\n    if (!utils_1.isFunction(visitorInstance[currRuleName])) {\n      return {\n        msg: \"Missing visitor method: <\" + currRuleName + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor.\",\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName\n      };\n    }\n  });\n  return utils_1.compact(errors);\n}\n\nexports.validateMissingCstMethods = validateMissingCstMethods;\nvar VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"];\n\nfunction validateRedundantMethods(visitorInstance, ruleNames) {\n  var errors = [];\n\n  for (var prop in visitorInstance) {\n    if (utils_1.isFunction(visitorInstance[prop]) && !utils_1.contains(VALID_PROP_NAMES, prop) && !utils_1.contains(ruleNames, prop)) {\n      errors.push({\n        msg: \"Redundant visitor method: <\" + prop + \"> on \" + lang_extensions_1.functionName(visitorInstance.constructor) + \" CST Visitor\\n\" + \"There is no Grammar Rule corresponding to this method's name.\\n\",\n        type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n        methodName: prop\n      });\n    }\n  }\n\n  return errors;\n}\n\nexports.validateRedundantMethods = validateRedundantMethods;","map":{"version":3,"mappings":"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","names":["defaultVisit","ctx","param","childrenNames","utils_1","childrenNamesLength","length","i","currChildName","currChildArray","currChildArrayLength","j","currChild","tokenTypeIdx","undefined","name","children","exports","createBaseSemanticVisitorConstructor","grammarName","ruleNames","derivedConstructor","lang_extensions_1","semanticProto","visit","cstNode","validateVisitor","semanticDefinitionErrors","errorMessages","currDefError","msg","Error","constructor","join","replace","prototype","_RULE_NAMES","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","Object","create","ruleName","CstVisitorDefinitionError","visitorInstance","missingErrors","validateMissingCstMethods","redundantErrors","validateRedundantMethods","concat","errors","currRuleName","type","MISSING_METHOD","methodName","VALID_PROP_NAMES","prop","push","REDUNDANT_METHOD"],"sourceRoot":"","sources":["../../../../src/parse/cst/cst_visitor.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}