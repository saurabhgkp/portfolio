{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GastRefResolverVisitor = exports.resolveGrammar = void 0;\n\nvar parser_1 = require(\"../parser/parser\");\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar gast_visitor_public_1 = require(\"./gast/gast_visitor_public\");\n\nfunction resolveGrammar(topLevels, errMsgProvider) {\n  var refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider);\n  refResolver.resolveRefs();\n  return refResolver.errors;\n}\n\nexports.resolveGrammar = resolveGrammar;\n\nvar GastRefResolverVisitor =\n/** @class */\nfunction (_super) {\n  __extends(GastRefResolverVisitor, _super);\n\n  function GastRefResolverVisitor(nameToTopRule, errMsgProvider) {\n    var _this = _super.call(this) || this;\n\n    _this.nameToTopRule = nameToTopRule;\n    _this.errMsgProvider = errMsgProvider;\n    _this.errors = [];\n    return _this;\n  }\n\n  GastRefResolverVisitor.prototype.resolveRefs = function () {\n    var _this = this;\n\n    utils_1.forEach(utils_1.values(this.nameToTopRule), function (prod) {\n      _this.currTopLevel = prod;\n      prod.accept(_this);\n    });\n  };\n\n  GastRefResolverVisitor.prototype.visitNonTerminal = function (node) {\n    var ref = this.nameToTopRule[node.nonTerminalName];\n\n    if (!ref) {\n      var msg = this.errMsgProvider.buildRuleNotFoundError(this.currTopLevel, node);\n      this.errors.push({\n        message: msg,\n        type: parser_1.ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      });\n    } else {\n      node.referencedRule = ref;\n    }\n  };\n\n  return GastRefResolverVisitor;\n}(gast_visitor_public_1.GAstVisitor);\n\nexports.GastRefResolverVisitor = GastRefResolverVisitor;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAIA;;AAEA;;AAMA,SAAgBA,cAAhB,CACEC,SADF,EAEEC,cAFF,EAEsD;EAEpD,IAAMC,WAAW,GAAG,IAAIC,sBAAJ,CAA2BH,SAA3B,EAAsCC,cAAtC,CAApB;EACAC,WAAW,CAACE,WAAZ;EACA,OAAOF,WAAW,CAACG,MAAnB;AACD;;AAPDC;;AASA;AAAA;AAAA;EAA4CC;;EAI1C,gCACUC,aADV,EAEUP,cAFV,EAE8D;IAF9D,YAIEQ,qBAAO,IAJT;;IACUC;IACAA;IALHA,eAAgD,EAAhD;;EAQN;;EAEMP,+CAAP;IAAA;;IACEQ,gBAAQA,eAAO,KAAKH,aAAZ,CAAR,EAAoC,UAACI,IAAD,EAAK;MACvCF,KAAI,CAACG,YAAL,GAAoBD,IAApB;MACAA,IAAI,CAACE,MAAL,CAAYJ,KAAZ;IACD,CAHD;EAID,CALM;;EAOAP,oDAAP,UAAwBY,IAAxB,EAAyC;IACvC,IAAMC,GAAG,GAAG,KAAKR,aAAL,CAAmBO,IAAI,CAACE,eAAxB,CAAZ;;IAEA,IAAI,CAACD,GAAL,EAAU;MACR,IAAME,GAAG,GAAG,KAAKjB,cAAL,CAAoBkB,sBAApB,CACV,KAAKN,YADK,EAEVE,IAFU,CAAZ;MAIA,KAAKV,MAAL,CAAYe,IAAZ,CAAiB;QACfC,OAAO,EAAEH,GADM;QAEfI,IAAI,EAAEC,mCAA0BC,sBAFjB;QAGfC,QAAQ,EAAE,KAAKZ,YAAL,CAAkBa,IAHb;QAIfC,iBAAiB,EAAEZ,IAAI,CAACE;MAJT,CAAjB;IAMD,CAXD,MAWO;MACLF,IAAI,CAACa,cAAL,GAAsBZ,GAAtB;IACD;EACF,CAjBM;;EAkBT;AAAC,CApCD,CAA4Ca,iCAA5C;;AAAavB","names":["resolveGrammar","topLevels","errMsgProvider","refResolver","GastRefResolverVisitor","resolveRefs","errors","exports","__extends","nameToTopRule","_super","_this","utils_1","prod","currTopLevel","accept","node","ref","nonTerminalName","msg","buildRuleNotFoundError","push","message","type","parser_1","UNRESOLVED_SUBRULE_REF","ruleName","name","unresolvedRefName","referencedRule","gast_visitor_public_1"],"sources":["/home/cliffexpc63/my example/portfolio/node_modules/chevrotain/src/parse/grammar/resolver.ts"],"sourcesContent":["import {\n  IParserUnresolvedRefDefinitionError,\n  ParserDefinitionErrorType\n} from \"../parser/parser\"\nimport { forEach, values } from \"@chevrotain/utils\"\nimport { NonTerminal, Rule } from \"./gast/gast_public\"\nimport { GAstVisitor } from \"./gast/gast_visitor_public\"\nimport {\n  IGrammarResolverErrorMessageProvider,\n  IParserDefinitionError\n} from \"./types\"\n\nexport function resolveGrammar(\n  topLevels: Record<string, Rule>,\n  errMsgProvider: IGrammarResolverErrorMessageProvider\n): IParserDefinitionError[] {\n  const refResolver = new GastRefResolverVisitor(topLevels, errMsgProvider)\n  refResolver.resolveRefs()\n  return refResolver.errors\n}\n\nexport class GastRefResolverVisitor extends GAstVisitor {\n  public errors: IParserUnresolvedRefDefinitionError[] = []\n  private currTopLevel: Rule\n\n  constructor(\n    private nameToTopRule: Record<string, Rule>,\n    private errMsgProvider: IGrammarResolverErrorMessageProvider\n  ) {\n    super()\n  }\n\n  public resolveRefs(): void {\n    forEach(values(this.nameToTopRule), (prod) => {\n      this.currTopLevel = prod\n      prod.accept(this)\n    })\n  }\n\n  public visitNonTerminal(node: NonTerminal): void {\n    const ref = this.nameToTopRule[node.nonTerminalName]\n\n    if (!ref) {\n      const msg = this.errMsgProvider.buildRuleNotFoundError(\n        this.currTopLevel,\n        node\n      )\n      this.errors.push({\n        message: msg,\n        type: ParserDefinitionErrorType.UNRESOLVED_SUBRULE_REF,\n        ruleName: this.currTopLevel.name,\n        unresolvedRefName: node.nonTerminalName\n      })\n    } else {\n      node.referencedRule = ref\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}